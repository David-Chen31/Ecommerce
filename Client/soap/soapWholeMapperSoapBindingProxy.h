/* soapWholeMapperSoapBindingProxy.h
   Generated by gSOAP 2.8.135 for soap_head.h

gSOAP XML Web services tools
Copyright (C) 2000,2024, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapWholeMapperSoapBindingProxy_H
#define soapWholeMapperSoapBindingProxy_H
#include "soapH.h"

    class SOAP_CMAC WholeMapperSoapBindingProxy {
      public:
        /// Context to manage proxy IO and data
        struct soap *soap;
        /// flag indicating that this context is owned by this proxy and should be deleted by the destructor
        bool soap_own;
        /// Endpoint URL of service 'WholeMapperSoapBindingProxy' (change as needed)
        const char *soap_endpoint;
        /// Variables globally declared in soap_head.h, if any
        /// Construct a proxy with new managing context
        WholeMapperSoapBindingProxy();
        /// Copy constructor
        WholeMapperSoapBindingProxy(const WholeMapperSoapBindingProxy& rhs);
        /// Construct proxy given a shared managing context
        WholeMapperSoapBindingProxy(struct soap*);
        /// Construct proxy given a shared managing context and endpoint URL
        WholeMapperSoapBindingProxy(struct soap*, const char *soap_endpoint_url);
        /// Constructor taking an endpoint URL
        WholeMapperSoapBindingProxy(const char *soap_endpoint_url);
        /// Constructor taking input and output mode flags for the new managing context
        WholeMapperSoapBindingProxy(soap_mode iomode);
        /// Constructor taking endpoint URL and input and output mode flags for the new managing context
        WholeMapperSoapBindingProxy(const char *soap_endpoint_url, soap_mode iomode);
        /// Constructor taking input and output mode flags for the new managing context
        WholeMapperSoapBindingProxy(soap_mode imode, soap_mode omode);
        /// Destructor deletes deserialized data and its managing context, when the context was allocated by the constructor
        virtual ~WholeMapperSoapBindingProxy();
        /// Initializer used by constructors
        virtual void WholeMapperSoapBindingProxy_init(soap_mode imode, soap_mode omode);
        /// Return a copy that has a new managing context with the same engine state
        virtual WholeMapperSoapBindingProxy *copy();
        /// Copy assignment
        WholeMapperSoapBindingProxy& operator=(const WholeMapperSoapBindingProxy&);
        /// Delete all deserialized data (uses soap_destroy() and soap_end())
        virtual void destroy();
        /// Delete all deserialized data and reset to default
        virtual void reset();
        /// Disables and removes SOAP Header from message by setting soap->header = NULL
        virtual void soap_noheader();
        /// Get SOAP Header structure (i.e. soap->header, which is NULL when absent)
        virtual ::SOAP_ENV__Header *soap_header();
        /// Get SOAP Fault structure (i.e. soap->fault, which is NULL when absent)
        virtual ::SOAP_ENV__Fault *soap_fault();
        /// Get SOAP Fault subcode QName string (NULL when absent)
        virtual const char *soap_fault_subcode();
        /// Get SOAP Fault string/reason (NULL when absent)
        virtual const char *soap_fault_string();
        /// Get SOAP Fault detail XML string (NULL when absent)
        virtual const char *soap_fault_detail();
        /// Close connection (normally automatic, except for send_X ops)
        virtual int soap_close_socket();
        /// Force close connection (can kill a thread blocked on IO)
        virtual int soap_force_close_socket();
        /// Print fault
        virtual void soap_print_fault(FILE*);
    #ifndef WITH_LEAN
    #ifndef WITH_COMPAT
        /// Print fault to stream
        virtual void soap_stream_fault(std::ostream&);
    #endif
        /// Write fault to buffer
        virtual char *soap_sprint_fault(char *buf, size_t len);
    #endif
        //
        /// Web service synchronous operation 'selectProductForUpdate' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int selectProductForUpdate(ns2__selectProductForUpdate *ns2__selectProductForUpdate_, ns2__selectProductForUpdateResponse &ns2__selectProductForUpdateResponse_) { return this->selectProductForUpdate(NULL, NULL, ns2__selectProductForUpdate_, ns2__selectProductForUpdateResponse_); }
        /// Web service synchronous operation 'selectProductForUpdate' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int selectProductForUpdate(const char *soap_endpoint_url, const char *soap_action, ns2__selectProductForUpdate *ns2__selectProductForUpdate_, ns2__selectProductForUpdateResponse &ns2__selectProductForUpdateResponse_) { return this->send_selectProductForUpdate(soap_endpoint_url, soap_action, ns2__selectProductForUpdate_) || this->recv_selectProductForUpdate(ns2__selectProductForUpdateResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_selectProductForUpdate' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_selectProductForUpdate(const char *soap_endpoint_url, const char *soap_action, ns2__selectProductForUpdate *ns2__selectProductForUpdate_);
        /// Web service asynchronous operation 'recv_selectProductForUpdate' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_selectProductForUpdate(ns2__selectProductForUpdateResponse &ns2__selectProductForUpdateResponse_);
        //
        /// Web service synchronous operation 'addProduct' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int addProduct(ns2__addProduct *ns2__addProduct_, ns2__addProductResponse &ns2__addProductResponse_) { return this->addProduct(NULL, NULL, ns2__addProduct_, ns2__addProductResponse_); }
        /// Web service synchronous operation 'addProduct' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int addProduct(const char *soap_endpoint_url, const char *soap_action, ns2__addProduct *ns2__addProduct_, ns2__addProductResponse &ns2__addProductResponse_) { return this->send_addProduct(soap_endpoint_url, soap_action, ns2__addProduct_) || this->recv_addProduct(ns2__addProductResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_addProduct' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_addProduct(const char *soap_endpoint_url, const char *soap_action, ns2__addProduct *ns2__addProduct_);
        /// Web service asynchronous operation 'recv_addProduct' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_addProduct(ns2__addProductResponse &ns2__addProductResponse_);
        //
        /// Web service synchronous operation 'deleteProductTypeByName' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int deleteProductTypeByName(ns2__deleteProductTypeByName *ns2__deleteProductTypeByName_, ns2__deleteProductTypeByNameResponse &ns2__deleteProductTypeByNameResponse_) { return this->deleteProductTypeByName(NULL, NULL, ns2__deleteProductTypeByName_, ns2__deleteProductTypeByNameResponse_); }
        /// Web service synchronous operation 'deleteProductTypeByName' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int deleteProductTypeByName(const char *soap_endpoint_url, const char *soap_action, ns2__deleteProductTypeByName *ns2__deleteProductTypeByName_, ns2__deleteProductTypeByNameResponse &ns2__deleteProductTypeByNameResponse_) { return this->send_deleteProductTypeByName(soap_endpoint_url, soap_action, ns2__deleteProductTypeByName_) || this->recv_deleteProductTypeByName(ns2__deleteProductTypeByNameResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_deleteProductTypeByName' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_deleteProductTypeByName(const char *soap_endpoint_url, const char *soap_action, ns2__deleteProductTypeByName *ns2__deleteProductTypeByName_);
        /// Web service asynchronous operation 'recv_deleteProductTypeByName' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_deleteProductTypeByName(ns2__deleteProductTypeByNameResponse &ns2__deleteProductTypeByNameResponse_);
        //
        /// Web service synchronous operation 'getOrderList' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getOrderList(ns2__getOrderList *ns2__getOrderList_, ns2__getOrderListResponse &ns2__getOrderListResponse_) { return this->getOrderList(NULL, NULL, ns2__getOrderList_, ns2__getOrderListResponse_); }
        /// Web service synchronous operation 'getOrderList' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getOrderList(const char *soap_endpoint_url, const char *soap_action, ns2__getOrderList *ns2__getOrderList_, ns2__getOrderListResponse &ns2__getOrderListResponse_) { return this->send_getOrderList(soap_endpoint_url, soap_action, ns2__getOrderList_) || this->recv_getOrderList(ns2__getOrderListResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getOrderList' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getOrderList(const char *soap_endpoint_url, const char *soap_action, ns2__getOrderList *ns2__getOrderList_);
        /// Web service asynchronous operation 'recv_getOrderList' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getOrderList(ns2__getOrderListResponse &ns2__getOrderListResponse_);
        //
        /// Web service synchronous operation 'getShopByNameAndPwd' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getShopByNameAndPwd(ns2__getShopByNameAndPwd *ns2__getShopByNameAndPwd_, ns2__getShopByNameAndPwdResponse &ns2__getShopByNameAndPwdResponse_) { return this->getShopByNameAndPwd(NULL, NULL, ns2__getShopByNameAndPwd_, ns2__getShopByNameAndPwdResponse_); }
        /// Web service synchronous operation 'getShopByNameAndPwd' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getShopByNameAndPwd(const char *soap_endpoint_url, const char *soap_action, ns2__getShopByNameAndPwd *ns2__getShopByNameAndPwd_, ns2__getShopByNameAndPwdResponse &ns2__getShopByNameAndPwdResponse_) { return this->send_getShopByNameAndPwd(soap_endpoint_url, soap_action, ns2__getShopByNameAndPwd_) || this->recv_getShopByNameAndPwd(ns2__getShopByNameAndPwdResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getShopByNameAndPwd' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getShopByNameAndPwd(const char *soap_endpoint_url, const char *soap_action, ns2__getShopByNameAndPwd *ns2__getShopByNameAndPwd_);
        /// Web service asynchronous operation 'recv_getShopByNameAndPwd' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getShopByNameAndPwd(ns2__getShopByNameAndPwdResponse &ns2__getShopByNameAndPwdResponse_);
        //
        /// Web service synchronous operation 'updateShop' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int updateShop(ns2__updateShop *ns2__updateShop_, ns2__updateShopResponse &ns2__updateShopResponse_) { return this->updateShop(NULL, NULL, ns2__updateShop_, ns2__updateShopResponse_); }
        /// Web service synchronous operation 'updateShop' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int updateShop(const char *soap_endpoint_url, const char *soap_action, ns2__updateShop *ns2__updateShop_, ns2__updateShopResponse &ns2__updateShopResponse_) { return this->send_updateShop(soap_endpoint_url, soap_action, ns2__updateShop_) || this->recv_updateShop(ns2__updateShopResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_updateShop' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_updateShop(const char *soap_endpoint_url, const char *soap_action, ns2__updateShop *ns2__updateShop_);
        /// Web service asynchronous operation 'recv_updateShop' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_updateShop(ns2__updateShopResponse &ns2__updateShopResponse_);
        //
        /// Web service synchronous operation 'getProductListByInfo' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getProductListByInfo(ns2__getProductListByInfo *ns2__getProductListByInfo_, ns2__getProductListByInfoResponse &ns2__getProductListByInfoResponse_) { return this->getProductListByInfo(NULL, NULL, ns2__getProductListByInfo_, ns2__getProductListByInfoResponse_); }
        /// Web service synchronous operation 'getProductListByInfo' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getProductListByInfo(const char *soap_endpoint_url, const char *soap_action, ns2__getProductListByInfo *ns2__getProductListByInfo_, ns2__getProductListByInfoResponse &ns2__getProductListByInfoResponse_) { return this->send_getProductListByInfo(soap_endpoint_url, soap_action, ns2__getProductListByInfo_) || this->recv_getProductListByInfo(ns2__getProductListByInfoResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getProductListByInfo' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getProductListByInfo(const char *soap_endpoint_url, const char *soap_action, ns2__getProductListByInfo *ns2__getProductListByInfo_);
        /// Web service asynchronous operation 'recv_getProductListByInfo' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getProductListByInfo(ns2__getProductListByInfoResponse &ns2__getProductListByInfoResponse_);
        //
        /// Web service synchronous operation 'getReadMessageFromShop' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getReadMessageFromShop(ns2__getReadMessageFromShop *ns2__getReadMessageFromShop_, ns2__getReadMessageFromShopResponse &ns2__getReadMessageFromShopResponse_) { return this->getReadMessageFromShop(NULL, NULL, ns2__getReadMessageFromShop_, ns2__getReadMessageFromShopResponse_); }
        /// Web service synchronous operation 'getReadMessageFromShop' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getReadMessageFromShop(const char *soap_endpoint_url, const char *soap_action, ns2__getReadMessageFromShop *ns2__getReadMessageFromShop_, ns2__getReadMessageFromShopResponse &ns2__getReadMessageFromShopResponse_) { return this->send_getReadMessageFromShop(soap_endpoint_url, soap_action, ns2__getReadMessageFromShop_) || this->recv_getReadMessageFromShop(ns2__getReadMessageFromShopResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getReadMessageFromShop' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getReadMessageFromShop(const char *soap_endpoint_url, const char *soap_action, ns2__getReadMessageFromShop *ns2__getReadMessageFromShop_);
        /// Web service asynchronous operation 'recv_getReadMessageFromShop' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getReadMessageFromShop(ns2__getReadMessageFromShopResponse &ns2__getReadMessageFromShopResponse_);
        //
        /// Web service synchronous operation 'updateClient' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int updateClient(ns2__updateClient *ns2__updateClient_, ns2__updateClientResponse &ns2__updateClientResponse_) { return this->updateClient(NULL, NULL, ns2__updateClient_, ns2__updateClientResponse_); }
        /// Web service synchronous operation 'updateClient' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int updateClient(const char *soap_endpoint_url, const char *soap_action, ns2__updateClient *ns2__updateClient_, ns2__updateClientResponse &ns2__updateClientResponse_) { return this->send_updateClient(soap_endpoint_url, soap_action, ns2__updateClient_) || this->recv_updateClient(ns2__updateClientResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_updateClient' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_updateClient(const char *soap_endpoint_url, const char *soap_action, ns2__updateClient *ns2__updateClient_);
        /// Web service asynchronous operation 'recv_updateClient' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_updateClient(ns2__updateClientResponse &ns2__updateClientResponse_);
        //
        /// Web service synchronous operation 'deleteProductByInfo' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int deleteProductByInfo(ns2__deleteProductByInfo *ns2__deleteProductByInfo_, ns2__deleteProductByInfoResponse &ns2__deleteProductByInfoResponse_) { return this->deleteProductByInfo(NULL, NULL, ns2__deleteProductByInfo_, ns2__deleteProductByInfoResponse_); }
        /// Web service synchronous operation 'deleteProductByInfo' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int deleteProductByInfo(const char *soap_endpoint_url, const char *soap_action, ns2__deleteProductByInfo *ns2__deleteProductByInfo_, ns2__deleteProductByInfoResponse &ns2__deleteProductByInfoResponse_) { return this->send_deleteProductByInfo(soap_endpoint_url, soap_action, ns2__deleteProductByInfo_) || this->recv_deleteProductByInfo(ns2__deleteProductByInfoResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_deleteProductByInfo' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_deleteProductByInfo(const char *soap_endpoint_url, const char *soap_action, ns2__deleteProductByInfo *ns2__deleteProductByInfo_);
        /// Web service asynchronous operation 'recv_deleteProductByInfo' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_deleteProductByInfo(ns2__deleteProductByInfoResponse &ns2__deleteProductByInfoResponse_);
        //
        /// Web service synchronous operation 'deleteClientByNameAndPwd' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int deleteClientByNameAndPwd(ns2__deleteClientByNameAndPwd *ns2__deleteClientByNameAndPwd_, ns2__deleteClientByNameAndPwdResponse &ns2__deleteClientByNameAndPwdResponse_) { return this->deleteClientByNameAndPwd(NULL, NULL, ns2__deleteClientByNameAndPwd_, ns2__deleteClientByNameAndPwdResponse_); }
        /// Web service synchronous operation 'deleteClientByNameAndPwd' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int deleteClientByNameAndPwd(const char *soap_endpoint_url, const char *soap_action, ns2__deleteClientByNameAndPwd *ns2__deleteClientByNameAndPwd_, ns2__deleteClientByNameAndPwdResponse &ns2__deleteClientByNameAndPwdResponse_) { return this->send_deleteClientByNameAndPwd(soap_endpoint_url, soap_action, ns2__deleteClientByNameAndPwd_) || this->recv_deleteClientByNameAndPwd(ns2__deleteClientByNameAndPwdResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_deleteClientByNameAndPwd' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_deleteClientByNameAndPwd(const char *soap_endpoint_url, const char *soap_action, ns2__deleteClientByNameAndPwd *ns2__deleteClientByNameAndPwd_);
        /// Web service asynchronous operation 'recv_deleteClientByNameAndPwd' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_deleteClientByNameAndPwd(ns2__deleteClientByNameAndPwdResponse &ns2__deleteClientByNameAndPwdResponse_);
        //
        /// Web service synchronous operation 'InsertShop' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int InsertShop(ns2__InsertShop *ns2__InsertShop_, ns2__InsertShopResponse &ns2__InsertShopResponse_) { return this->InsertShop(NULL, NULL, ns2__InsertShop_, ns2__InsertShopResponse_); }
        /// Web service synchronous operation 'InsertShop' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int InsertShop(const char *soap_endpoint_url, const char *soap_action, ns2__InsertShop *ns2__InsertShop_, ns2__InsertShopResponse &ns2__InsertShopResponse_) { return this->send_InsertShop(soap_endpoint_url, soap_action, ns2__InsertShop_) || this->recv_InsertShop(ns2__InsertShopResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_InsertShop' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_InsertShop(const char *soap_endpoint_url, const char *soap_action, ns2__InsertShop *ns2__InsertShop_);
        /// Web service asynchronous operation 'recv_InsertShop' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_InsertShop(ns2__InsertShopResponse &ns2__InsertShopResponse_);
        //
        /// Web service synchronous operation 'updateMessageFromShop' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int updateMessageFromShop(ns2__updateMessageFromShop *ns2__updateMessageFromShop_, ns2__updateMessageFromShopResponse &ns2__updateMessageFromShopResponse_) { return this->updateMessageFromShop(NULL, NULL, ns2__updateMessageFromShop_, ns2__updateMessageFromShopResponse_); }
        /// Web service synchronous operation 'updateMessageFromShop' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int updateMessageFromShop(const char *soap_endpoint_url, const char *soap_action, ns2__updateMessageFromShop *ns2__updateMessageFromShop_, ns2__updateMessageFromShopResponse &ns2__updateMessageFromShopResponse_) { return this->send_updateMessageFromShop(soap_endpoint_url, soap_action, ns2__updateMessageFromShop_) || this->recv_updateMessageFromShop(ns2__updateMessageFromShopResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_updateMessageFromShop' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_updateMessageFromShop(const char *soap_endpoint_url, const char *soap_action, ns2__updateMessageFromShop *ns2__updateMessageFromShop_);
        /// Web service asynchronous operation 'recv_updateMessageFromShop' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_updateMessageFromShop(ns2__updateMessageFromShopResponse &ns2__updateMessageFromShopResponse_);
        //
        /// Web service synchronous operation 'getProductTypeByProName' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getProductTypeByProName(ns2__getProductTypeByProName *ns2__getProductTypeByProName_, ns2__getProductTypeByProNameResponse &ns2__getProductTypeByProNameResponse_) { return this->getProductTypeByProName(NULL, NULL, ns2__getProductTypeByProName_, ns2__getProductTypeByProNameResponse_); }
        /// Web service synchronous operation 'getProductTypeByProName' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getProductTypeByProName(const char *soap_endpoint_url, const char *soap_action, ns2__getProductTypeByProName *ns2__getProductTypeByProName_, ns2__getProductTypeByProNameResponse &ns2__getProductTypeByProNameResponse_) { return this->send_getProductTypeByProName(soap_endpoint_url, soap_action, ns2__getProductTypeByProName_) || this->recv_getProductTypeByProName(ns2__getProductTypeByProNameResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getProductTypeByProName' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getProductTypeByProName(const char *soap_endpoint_url, const char *soap_action, ns2__getProductTypeByProName *ns2__getProductTypeByProName_);
        /// Web service asynchronous operation 'recv_getProductTypeByProName' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getProductTypeByProName(ns2__getProductTypeByProNameResponse &ns2__getProductTypeByProNameResponse_);
        //
        /// Web service synchronous operation 'getClientList' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getClientList(ns2__getClientList *ns2__getClientList_, ns2__getClientListResponse &ns2__getClientListResponse_) { return this->getClientList(NULL, NULL, ns2__getClientList_, ns2__getClientListResponse_); }
        /// Web service synchronous operation 'getClientList' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getClientList(const char *soap_endpoint_url, const char *soap_action, ns2__getClientList *ns2__getClientList_, ns2__getClientListResponse &ns2__getClientListResponse_) { return this->send_getClientList(soap_endpoint_url, soap_action, ns2__getClientList_) || this->recv_getClientList(ns2__getClientListResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getClientList' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getClientList(const char *soap_endpoint_url, const char *soap_action, ns2__getClientList *ns2__getClientList_);
        /// Web service asynchronous operation 'recv_getClientList' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getClientList(ns2__getClientListResponse &ns2__getClientListResponse_);
        //
        /// Web service synchronous operation 'purchaseProduct' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int purchaseProduct(ns2__purchaseProduct *ns2__purchaseProduct_, ns2__purchaseProductResponse &ns2__purchaseProductResponse_) { return this->purchaseProduct(NULL, NULL, ns2__purchaseProduct_, ns2__purchaseProductResponse_); }
        /// Web service synchronous operation 'purchaseProduct' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int purchaseProduct(const char *soap_endpoint_url, const char *soap_action, ns2__purchaseProduct *ns2__purchaseProduct_, ns2__purchaseProductResponse &ns2__purchaseProductResponse_) { return this->send_purchaseProduct(soap_endpoint_url, soap_action, ns2__purchaseProduct_) || this->recv_purchaseProduct(ns2__purchaseProductResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_purchaseProduct' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_purchaseProduct(const char *soap_endpoint_url, const char *soap_action, ns2__purchaseProduct *ns2__purchaseProduct_);
        /// Web service asynchronous operation 'recv_purchaseProduct' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_purchaseProduct(ns2__purchaseProductResponse &ns2__purchaseProductResponse_);
        //
        /// Web service synchronous operation 'updateMessageFromClient' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int updateMessageFromClient(ns2__updateMessageFromClient *ns2__updateMessageFromClient_, ns2__updateMessageFromClientResponse &ns2__updateMessageFromClientResponse_) { return this->updateMessageFromClient(NULL, NULL, ns2__updateMessageFromClient_, ns2__updateMessageFromClientResponse_); }
        /// Web service synchronous operation 'updateMessageFromClient' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int updateMessageFromClient(const char *soap_endpoint_url, const char *soap_action, ns2__updateMessageFromClient *ns2__updateMessageFromClient_, ns2__updateMessageFromClientResponse &ns2__updateMessageFromClientResponse_) { return this->send_updateMessageFromClient(soap_endpoint_url, soap_action, ns2__updateMessageFromClient_) || this->recv_updateMessageFromClient(ns2__updateMessageFromClientResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_updateMessageFromClient' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_updateMessageFromClient(const char *soap_endpoint_url, const char *soap_action, ns2__updateMessageFromClient *ns2__updateMessageFromClient_);
        /// Web service asynchronous operation 'recv_updateMessageFromClient' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_updateMessageFromClient(ns2__updateMessageFromClientResponse &ns2__updateMessageFromClientResponse_);
        //
        /// Web service synchronous operation 'getUnreadMessageFromClient' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getUnreadMessageFromClient(ns2__getUnreadMessageFromClient *ns2__getUnreadMessageFromClient_, ns2__getUnreadMessageFromClientResponse &ns2__getUnreadMessageFromClientResponse_) { return this->getUnreadMessageFromClient(NULL, NULL, ns2__getUnreadMessageFromClient_, ns2__getUnreadMessageFromClientResponse_); }
        /// Web service synchronous operation 'getUnreadMessageFromClient' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getUnreadMessageFromClient(const char *soap_endpoint_url, const char *soap_action, ns2__getUnreadMessageFromClient *ns2__getUnreadMessageFromClient_, ns2__getUnreadMessageFromClientResponse &ns2__getUnreadMessageFromClientResponse_) { return this->send_getUnreadMessageFromClient(soap_endpoint_url, soap_action, ns2__getUnreadMessageFromClient_) || this->recv_getUnreadMessageFromClient(ns2__getUnreadMessageFromClientResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getUnreadMessageFromClient' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getUnreadMessageFromClient(const char *soap_endpoint_url, const char *soap_action, ns2__getUnreadMessageFromClient *ns2__getUnreadMessageFromClient_);
        /// Web service asynchronous operation 'recv_getUnreadMessageFromClient' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getUnreadMessageFromClient(ns2__getUnreadMessageFromClientResponse &ns2__getUnreadMessageFromClientResponse_);
        //
        /// Web service synchronous operation 'updateProductByInfo' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int updateProductByInfo(ns2__updateProductByInfo *ns2__updateProductByInfo_, ns2__updateProductByInfoResponse &ns2__updateProductByInfoResponse_) { return this->updateProductByInfo(NULL, NULL, ns2__updateProductByInfo_, ns2__updateProductByInfoResponse_); }
        /// Web service synchronous operation 'updateProductByInfo' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int updateProductByInfo(const char *soap_endpoint_url, const char *soap_action, ns2__updateProductByInfo *ns2__updateProductByInfo_, ns2__updateProductByInfoResponse &ns2__updateProductByInfoResponse_) { return this->send_updateProductByInfo(soap_endpoint_url, soap_action, ns2__updateProductByInfo_) || this->recv_updateProductByInfo(ns2__updateProductByInfoResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_updateProductByInfo' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_updateProductByInfo(const char *soap_endpoint_url, const char *soap_action, ns2__updateProductByInfo *ns2__updateProductByInfo_);
        /// Web service asynchronous operation 'recv_updateProductByInfo' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_updateProductByInfo(ns2__updateProductByInfoResponse &ns2__updateProductByInfoResponse_);
        //
        /// Web service synchronous operation 'getMessageFromClient' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getMessageFromClient(ns2__getMessageFromClient *ns2__getMessageFromClient_, ns2__getMessageFromClientResponse &ns2__getMessageFromClientResponse_) { return this->getMessageFromClient(NULL, NULL, ns2__getMessageFromClient_, ns2__getMessageFromClientResponse_); }
        /// Web service synchronous operation 'getMessageFromClient' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getMessageFromClient(const char *soap_endpoint_url, const char *soap_action, ns2__getMessageFromClient *ns2__getMessageFromClient_, ns2__getMessageFromClientResponse &ns2__getMessageFromClientResponse_) { return this->send_getMessageFromClient(soap_endpoint_url, soap_action, ns2__getMessageFromClient_) || this->recv_getMessageFromClient(ns2__getMessageFromClientResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getMessageFromClient' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getMessageFromClient(const char *soap_endpoint_url, const char *soap_action, ns2__getMessageFromClient *ns2__getMessageFromClient_);
        /// Web service asynchronous operation 'recv_getMessageFromClient' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getMessageFromClient(ns2__getMessageFromClientResponse &ns2__getMessageFromClientResponse_);
        //
        /// Web service synchronous operation 'addOrder' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int addOrder(ns2__addOrder *ns2__addOrder_, ns2__addOrderResponse &ns2__addOrderResponse_) { return this->addOrder(NULL, NULL, ns2__addOrder_, ns2__addOrderResponse_); }
        /// Web service synchronous operation 'addOrder' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int addOrder(const char *soap_endpoint_url, const char *soap_action, ns2__addOrder *ns2__addOrder_, ns2__addOrderResponse &ns2__addOrderResponse_) { return this->send_addOrder(soap_endpoint_url, soap_action, ns2__addOrder_) || this->recv_addOrder(ns2__addOrderResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_addOrder' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_addOrder(const char *soap_endpoint_url, const char *soap_action, ns2__addOrder *ns2__addOrder_);
        /// Web service asynchronous operation 'recv_addOrder' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_addOrder(ns2__addOrderResponse &ns2__addOrderResponse_);
        //
        /// Web service synchronous operation 'deleteShopByNameAndPwd' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int deleteShopByNameAndPwd(ns2__deleteShopByNameAndPwd *ns2__deleteShopByNameAndPwd_, ns2__deleteShopByNameAndPwdResponse &ns2__deleteShopByNameAndPwdResponse_) { return this->deleteShopByNameAndPwd(NULL, NULL, ns2__deleteShopByNameAndPwd_, ns2__deleteShopByNameAndPwdResponse_); }
        /// Web service synchronous operation 'deleteShopByNameAndPwd' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int deleteShopByNameAndPwd(const char *soap_endpoint_url, const char *soap_action, ns2__deleteShopByNameAndPwd *ns2__deleteShopByNameAndPwd_, ns2__deleteShopByNameAndPwdResponse &ns2__deleteShopByNameAndPwdResponse_) { return this->send_deleteShopByNameAndPwd(soap_endpoint_url, soap_action, ns2__deleteShopByNameAndPwd_) || this->recv_deleteShopByNameAndPwd(ns2__deleteShopByNameAndPwdResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_deleteShopByNameAndPwd' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_deleteShopByNameAndPwd(const char *soap_endpoint_url, const char *soap_action, ns2__deleteShopByNameAndPwd *ns2__deleteShopByNameAndPwd_);
        /// Web service asynchronous operation 'recv_deleteShopByNameAndPwd' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_deleteShopByNameAndPwd(ns2__deleteShopByNameAndPwdResponse &ns2__deleteShopByNameAndPwdResponse_);
        //
        /// Web service synchronous operation 'getProductList' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getProductList(ns2__getProductList *ns2__getProductList_, ns2__getProductListResponse &ns2__getProductListResponse_) { return this->getProductList(NULL, NULL, ns2__getProductList_, ns2__getProductListResponse_); }
        /// Web service synchronous operation 'getProductList' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getProductList(const char *soap_endpoint_url, const char *soap_action, ns2__getProductList *ns2__getProductList_, ns2__getProductListResponse &ns2__getProductListResponse_) { return this->send_getProductList(soap_endpoint_url, soap_action, ns2__getProductList_) || this->recv_getProductList(ns2__getProductListResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getProductList' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getProductList(const char *soap_endpoint_url, const char *soap_action, ns2__getProductList *ns2__getProductList_);
        /// Web service asynchronous operation 'recv_getProductList' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getProductList(ns2__getProductListResponse &ns2__getProductListResponse_);
        //
        /// Web service synchronous operation 'getOrderListHistory' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getOrderListHistory(ns2__getOrderListHistory *ns2__getOrderListHistory_, ns2__getOrderListHistoryResponse &ns2__getOrderListHistoryResponse_) { return this->getOrderListHistory(NULL, NULL, ns2__getOrderListHistory_, ns2__getOrderListHistoryResponse_); }
        /// Web service synchronous operation 'getOrderListHistory' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getOrderListHistory(const char *soap_endpoint_url, const char *soap_action, ns2__getOrderListHistory *ns2__getOrderListHistory_, ns2__getOrderListHistoryResponse &ns2__getOrderListHistoryResponse_) { return this->send_getOrderListHistory(soap_endpoint_url, soap_action, ns2__getOrderListHistory_) || this->recv_getOrderListHistory(ns2__getOrderListHistoryResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getOrderListHistory' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getOrderListHistory(const char *soap_endpoint_url, const char *soap_action, ns2__getOrderListHistory *ns2__getOrderListHistory_);
        /// Web service asynchronous operation 'recv_getOrderListHistory' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getOrderListHistory(ns2__getOrderListHistoryResponse &ns2__getOrderListHistoryResponse_);
        //
        /// Web service synchronous operation 'getReadMessageFromClient' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getReadMessageFromClient(ns2__getReadMessageFromClient *ns2__getReadMessageFromClient_, ns2__getReadMessageFromClientResponse &ns2__getReadMessageFromClientResponse_) { return this->getReadMessageFromClient(NULL, NULL, ns2__getReadMessageFromClient_, ns2__getReadMessageFromClientResponse_); }
        /// Web service synchronous operation 'getReadMessageFromClient' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getReadMessageFromClient(const char *soap_endpoint_url, const char *soap_action, ns2__getReadMessageFromClient *ns2__getReadMessageFromClient_, ns2__getReadMessageFromClientResponse &ns2__getReadMessageFromClientResponse_) { return this->send_getReadMessageFromClient(soap_endpoint_url, soap_action, ns2__getReadMessageFromClient_) || this->recv_getReadMessageFromClient(ns2__getReadMessageFromClientResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getReadMessageFromClient' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getReadMessageFromClient(const char *soap_endpoint_url, const char *soap_action, ns2__getReadMessageFromClient *ns2__getReadMessageFromClient_);
        /// Web service asynchronous operation 'recv_getReadMessageFromClient' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getReadMessageFromClient(ns2__getReadMessageFromClientResponse &ns2__getReadMessageFromClientResponse_);
        //
        /// Web service synchronous operation 'updateHistory' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int updateHistory(ns2__updateHistory *ns2__updateHistory_, ns2__updateHistoryResponse &ns2__updateHistoryResponse_) { return this->updateHistory(NULL, NULL, ns2__updateHistory_, ns2__updateHistoryResponse_); }
        /// Web service synchronous operation 'updateHistory' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int updateHistory(const char *soap_endpoint_url, const char *soap_action, ns2__updateHistory *ns2__updateHistory_, ns2__updateHistoryResponse &ns2__updateHistoryResponse_) { return this->send_updateHistory(soap_endpoint_url, soap_action, ns2__updateHistory_) || this->recv_updateHistory(ns2__updateHistoryResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_updateHistory' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_updateHistory(const char *soap_endpoint_url, const char *soap_action, ns2__updateHistory *ns2__updateHistory_);
        /// Web service asynchronous operation 'recv_updateHistory' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_updateHistory(ns2__updateHistoryResponse &ns2__updateHistoryResponse_);
        //
        /// Web service synchronous operation 'InsertMessage' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int InsertMessage(ns2__InsertMessage *ns2__InsertMessage_, ns2__InsertMessageResponse &ns2__InsertMessageResponse_) { return this->InsertMessage(NULL, NULL, ns2__InsertMessage_, ns2__InsertMessageResponse_); }
        /// Web service synchronous operation 'InsertMessage' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int InsertMessage(const char *soap_endpoint_url, const char *soap_action, ns2__InsertMessage *ns2__InsertMessage_, ns2__InsertMessageResponse &ns2__InsertMessageResponse_) { return this->send_InsertMessage(soap_endpoint_url, soap_action, ns2__InsertMessage_) || this->recv_InsertMessage(ns2__InsertMessageResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_InsertMessage' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_InsertMessage(const char *soap_endpoint_url, const char *soap_action, ns2__InsertMessage *ns2__InsertMessage_);
        /// Web service asynchronous operation 'recv_InsertMessage' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_InsertMessage(ns2__InsertMessageResponse &ns2__InsertMessageResponse_);
        //
        /// Web service synchronous operation 'getShopLikeList' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getShopLikeList(ns2__getShopLikeList *ns2__getShopLikeList_, ns2__getShopLikeListResponse &ns2__getShopLikeListResponse_) { return this->getShopLikeList(NULL, NULL, ns2__getShopLikeList_, ns2__getShopLikeListResponse_); }
        /// Web service synchronous operation 'getShopLikeList' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getShopLikeList(const char *soap_endpoint_url, const char *soap_action, ns2__getShopLikeList *ns2__getShopLikeList_, ns2__getShopLikeListResponse &ns2__getShopLikeListResponse_) { return this->send_getShopLikeList(soap_endpoint_url, soap_action, ns2__getShopLikeList_) || this->recv_getShopLikeList(ns2__getShopLikeListResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getShopLikeList' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getShopLikeList(const char *soap_endpoint_url, const char *soap_action, ns2__getShopLikeList *ns2__getShopLikeList_);
        /// Web service asynchronous operation 'recv_getShopLikeList' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getShopLikeList(ns2__getShopLikeListResponse &ns2__getShopLikeListResponse_);
        //
        /// Web service synchronous operation 'getMessageFromShop' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getMessageFromShop(ns2__getMessageFromShop *ns2__getMessageFromShop_, ns2__getMessageFromShopResponse &ns2__getMessageFromShopResponse_) { return this->getMessageFromShop(NULL, NULL, ns2__getMessageFromShop_, ns2__getMessageFromShopResponse_); }
        /// Web service synchronous operation 'getMessageFromShop' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getMessageFromShop(const char *soap_endpoint_url, const char *soap_action, ns2__getMessageFromShop *ns2__getMessageFromShop_, ns2__getMessageFromShopResponse &ns2__getMessageFromShopResponse_) { return this->send_getMessageFromShop(soap_endpoint_url, soap_action, ns2__getMessageFromShop_) || this->recv_getMessageFromShop(ns2__getMessageFromShopResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getMessageFromShop' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getMessageFromShop(const char *soap_endpoint_url, const char *soap_action, ns2__getMessageFromShop *ns2__getMessageFromShop_);
        /// Web service asynchronous operation 'recv_getMessageFromShop' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getMessageFromShop(ns2__getMessageFromShopResponse &ns2__getMessageFromShopResponse_);
        //
        /// Web service synchronous operation 'deleteMessageFromShop' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int deleteMessageFromShop(ns2__deleteMessageFromShop *ns2__deleteMessageFromShop_, ns2__deleteMessageFromShopResponse &ns2__deleteMessageFromShopResponse_) { return this->deleteMessageFromShop(NULL, NULL, ns2__deleteMessageFromShop_, ns2__deleteMessageFromShopResponse_); }
        /// Web service synchronous operation 'deleteMessageFromShop' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int deleteMessageFromShop(const char *soap_endpoint_url, const char *soap_action, ns2__deleteMessageFromShop *ns2__deleteMessageFromShop_, ns2__deleteMessageFromShopResponse &ns2__deleteMessageFromShopResponse_) { return this->send_deleteMessageFromShop(soap_endpoint_url, soap_action, ns2__deleteMessageFromShop_) || this->recv_deleteMessageFromShop(ns2__deleteMessageFromShopResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_deleteMessageFromShop' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_deleteMessageFromShop(const char *soap_endpoint_url, const char *soap_action, ns2__deleteMessageFromShop *ns2__deleteMessageFromShop_);
        /// Web service asynchronous operation 'recv_deleteMessageFromShop' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_deleteMessageFromShop(ns2__deleteMessageFromShopResponse &ns2__deleteMessageFromShopResponse_);
        //
        /// Web service synchronous operation 'getOrderLikeList' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getOrderLikeList(ns2__getOrderLikeList *ns2__getOrderLikeList_, ns2__getOrderLikeListResponse &ns2__getOrderLikeListResponse_) { return this->getOrderLikeList(NULL, NULL, ns2__getOrderLikeList_, ns2__getOrderLikeListResponse_); }
        /// Web service synchronous operation 'getOrderLikeList' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getOrderLikeList(const char *soap_endpoint_url, const char *soap_action, ns2__getOrderLikeList *ns2__getOrderLikeList_, ns2__getOrderLikeListResponse &ns2__getOrderLikeListResponse_) { return this->send_getOrderLikeList(soap_endpoint_url, soap_action, ns2__getOrderLikeList_) || this->recv_getOrderLikeList(ns2__getOrderLikeListResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getOrderLikeList' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getOrderLikeList(const char *soap_endpoint_url, const char *soap_action, ns2__getOrderLikeList *ns2__getOrderLikeList_);
        /// Web service asynchronous operation 'recv_getOrderLikeList' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getOrderLikeList(ns2__getOrderLikeListResponse &ns2__getOrderLikeListResponse_);
        //
        /// Web service synchronous operation 'getUnreadMessageFromShop' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getUnreadMessageFromShop(ns2__getUnreadMessageFromShop *ns2__getUnreadMessageFromShop_, ns2__getUnreadMessageFromShopResponse &ns2__getUnreadMessageFromShopResponse_) { return this->getUnreadMessageFromShop(NULL, NULL, ns2__getUnreadMessageFromShop_, ns2__getUnreadMessageFromShopResponse_); }
        /// Web service synchronous operation 'getUnreadMessageFromShop' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getUnreadMessageFromShop(const char *soap_endpoint_url, const char *soap_action, ns2__getUnreadMessageFromShop *ns2__getUnreadMessageFromShop_, ns2__getUnreadMessageFromShopResponse &ns2__getUnreadMessageFromShopResponse_) { return this->send_getUnreadMessageFromShop(soap_endpoint_url, soap_action, ns2__getUnreadMessageFromShop_) || this->recv_getUnreadMessageFromShop(ns2__getUnreadMessageFromShopResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getUnreadMessageFromShop' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getUnreadMessageFromShop(const char *soap_endpoint_url, const char *soap_action, ns2__getUnreadMessageFromShop *ns2__getUnreadMessageFromShop_);
        /// Web service asynchronous operation 'recv_getUnreadMessageFromShop' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getUnreadMessageFromShop(ns2__getUnreadMessageFromShopResponse &ns2__getUnreadMessageFromShopResponse_);
        //
        /// Web service synchronous operation 'getClientLikeList' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getClientLikeList(ns2__getClientLikeList *ns2__getClientLikeList_, ns2__getClientLikeListResponse &ns2__getClientLikeListResponse_) { return this->getClientLikeList(NULL, NULL, ns2__getClientLikeList_, ns2__getClientLikeListResponse_); }
        /// Web service synchronous operation 'getClientLikeList' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getClientLikeList(const char *soap_endpoint_url, const char *soap_action, ns2__getClientLikeList *ns2__getClientLikeList_, ns2__getClientLikeListResponse &ns2__getClientLikeListResponse_) { return this->send_getClientLikeList(soap_endpoint_url, soap_action, ns2__getClientLikeList_) || this->recv_getClientLikeList(ns2__getClientLikeListResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getClientLikeList' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getClientLikeList(const char *soap_endpoint_url, const char *soap_action, ns2__getClientLikeList *ns2__getClientLikeList_);
        /// Web service asynchronous operation 'recv_getClientLikeList' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getClientLikeList(ns2__getClientLikeListResponse &ns2__getClientLikeListResponse_);
        //
        /// Web service synchronous operation 'getShopList' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getShopList(ns2__getShopList *ns2__getShopList_, ns2__getShopListResponse &ns2__getShopListResponse_) { return this->getShopList(NULL, NULL, ns2__getShopList_, ns2__getShopListResponse_); }
        /// Web service synchronous operation 'getShopList' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getShopList(const char *soap_endpoint_url, const char *soap_action, ns2__getShopList *ns2__getShopList_, ns2__getShopListResponse &ns2__getShopListResponse_) { return this->send_getShopList(soap_endpoint_url, soap_action, ns2__getShopList_) || this->recv_getShopList(ns2__getShopListResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getShopList' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getShopList(const char *soap_endpoint_url, const char *soap_action, ns2__getShopList *ns2__getShopList_);
        /// Web service asynchronous operation 'recv_getShopList' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getShopList(ns2__getShopListResponse &ns2__getShopListResponse_);
        //
        /// Web service synchronous operation 'getOrderListByInfo' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getOrderListByInfo(ns2__getOrderListByInfo *ns2__getOrderListByInfo_, ns2__getOrderListByInfoResponse &ns2__getOrderListByInfoResponse_) { return this->getOrderListByInfo(NULL, NULL, ns2__getOrderListByInfo_, ns2__getOrderListByInfoResponse_); }
        /// Web service synchronous operation 'getOrderListByInfo' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getOrderListByInfo(const char *soap_endpoint_url, const char *soap_action, ns2__getOrderListByInfo *ns2__getOrderListByInfo_, ns2__getOrderListByInfoResponse &ns2__getOrderListByInfoResponse_) { return this->send_getOrderListByInfo(soap_endpoint_url, soap_action, ns2__getOrderListByInfo_) || this->recv_getOrderListByInfo(ns2__getOrderListByInfoResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getOrderListByInfo' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getOrderListByInfo(const char *soap_endpoint_url, const char *soap_action, ns2__getOrderListByInfo *ns2__getOrderListByInfo_);
        /// Web service asynchronous operation 'recv_getOrderListByInfo' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getOrderListByInfo(ns2__getOrderListByInfoResponse &ns2__getOrderListByInfoResponse_);
        //
        /// Web service synchronous operation 'addProductType' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int addProductType(ns2__addProductType *ns2__addProductType_, ns2__addProductTypeResponse &ns2__addProductTypeResponse_) { return this->addProductType(NULL, NULL, ns2__addProductType_, ns2__addProductTypeResponse_); }
        /// Web service synchronous operation 'addProductType' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int addProductType(const char *soap_endpoint_url, const char *soap_action, ns2__addProductType *ns2__addProductType_, ns2__addProductTypeResponse &ns2__addProductTypeResponse_) { return this->send_addProductType(soap_endpoint_url, soap_action, ns2__addProductType_) || this->recv_addProductType(ns2__addProductTypeResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_addProductType' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_addProductType(const char *soap_endpoint_url, const char *soap_action, ns2__addProductType *ns2__addProductType_);
        /// Web service asynchronous operation 'recv_addProductType' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_addProductType(ns2__addProductTypeResponse &ns2__addProductTypeResponse_);
        //
        /// Web service synchronous operation 'deleteMessageFromClient' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int deleteMessageFromClient(ns2__deleteMessageFromClient *ns2__deleteMessageFromClient_, ns2__deleteMessageFromClientResponse &ns2__deleteMessageFromClientResponse_) { return this->deleteMessageFromClient(NULL, NULL, ns2__deleteMessageFromClient_, ns2__deleteMessageFromClientResponse_); }
        /// Web service synchronous operation 'deleteMessageFromClient' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int deleteMessageFromClient(const char *soap_endpoint_url, const char *soap_action, ns2__deleteMessageFromClient *ns2__deleteMessageFromClient_, ns2__deleteMessageFromClientResponse &ns2__deleteMessageFromClientResponse_) { return this->send_deleteMessageFromClient(soap_endpoint_url, soap_action, ns2__deleteMessageFromClient_) || this->recv_deleteMessageFromClient(ns2__deleteMessageFromClientResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_deleteMessageFromClient' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_deleteMessageFromClient(const char *soap_endpoint_url, const char *soap_action, ns2__deleteMessageFromClient *ns2__deleteMessageFromClient_);
        /// Web service asynchronous operation 'recv_deleteMessageFromClient' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_deleteMessageFromClient(ns2__deleteMessageFromClientResponse &ns2__deleteMessageFromClientResponse_);
        //
        /// Web service synchronous operation 'getProductLikeList' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getProductLikeList(ns2__getProductLikeList *ns2__getProductLikeList_, ns2__getProductLikeListResponse &ns2__getProductLikeListResponse_) { return this->getProductLikeList(NULL, NULL, ns2__getProductLikeList_, ns2__getProductLikeListResponse_); }
        /// Web service synchronous operation 'getProductLikeList' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getProductLikeList(const char *soap_endpoint_url, const char *soap_action, ns2__getProductLikeList *ns2__getProductLikeList_, ns2__getProductLikeListResponse &ns2__getProductLikeListResponse_) { return this->send_getProductLikeList(soap_endpoint_url, soap_action, ns2__getProductLikeList_) || this->recv_getProductLikeList(ns2__getProductLikeListResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getProductLikeList' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getProductLikeList(const char *soap_endpoint_url, const char *soap_action, ns2__getProductLikeList *ns2__getProductLikeList_);
        /// Web service asynchronous operation 'recv_getProductLikeList' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getProductLikeList(ns2__getProductLikeListResponse &ns2__getProductLikeListResponse_);
        //
        /// Web service synchronous operation 'getClientByNameAndPwd' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getClientByNameAndPwd(ns2__getClientByNameAndPwd *ns2__getClientByNameAndPwd_, ns2__getClientByNameAndPwdResponse &ns2__getClientByNameAndPwdResponse_) { return this->getClientByNameAndPwd(NULL, NULL, ns2__getClientByNameAndPwd_, ns2__getClientByNameAndPwdResponse_); }
        /// Web service synchronous operation 'getClientByNameAndPwd' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getClientByNameAndPwd(const char *soap_endpoint_url, const char *soap_action, ns2__getClientByNameAndPwd *ns2__getClientByNameAndPwd_, ns2__getClientByNameAndPwdResponse &ns2__getClientByNameAndPwdResponse_) { return this->send_getClientByNameAndPwd(soap_endpoint_url, soap_action, ns2__getClientByNameAndPwd_) || this->recv_getClientByNameAndPwd(ns2__getClientByNameAndPwdResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getClientByNameAndPwd' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getClientByNameAndPwd(const char *soap_endpoint_url, const char *soap_action, ns2__getClientByNameAndPwd *ns2__getClientByNameAndPwd_);
        /// Web service asynchronous operation 'recv_getClientByNameAndPwd' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getClientByNameAndPwd(ns2__getClientByNameAndPwdResponse &ns2__getClientByNameAndPwdResponse_);
        //
        /// Web service synchronous operation 'deleteShoppingCart' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int deleteShoppingCart(ns2__deleteShoppingCart *ns2__deleteShoppingCart_, ns2__deleteShoppingCartResponse &ns2__deleteShoppingCartResponse_) { return this->deleteShoppingCart(NULL, NULL, ns2__deleteShoppingCart_, ns2__deleteShoppingCartResponse_); }
        /// Web service synchronous operation 'deleteShoppingCart' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int deleteShoppingCart(const char *soap_endpoint_url, const char *soap_action, ns2__deleteShoppingCart *ns2__deleteShoppingCart_, ns2__deleteShoppingCartResponse &ns2__deleteShoppingCartResponse_) { return this->send_deleteShoppingCart(soap_endpoint_url, soap_action, ns2__deleteShoppingCart_) || this->recv_deleteShoppingCart(ns2__deleteShoppingCartResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_deleteShoppingCart' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_deleteShoppingCart(const char *soap_endpoint_url, const char *soap_action, ns2__deleteShoppingCart *ns2__deleteShoppingCart_);
        /// Web service asynchronous operation 'recv_deleteShoppingCart' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_deleteShoppingCart(ns2__deleteShoppingCartResponse &ns2__deleteShoppingCartResponse_);
        //
        /// Web service synchronous operation 'InsertClient' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int InsertClient(ns2__InsertClient *ns2__InsertClient_, ns2__InsertClientResponse &ns2__InsertClientResponse_) { return this->InsertClient(NULL, NULL, ns2__InsertClient_, ns2__InsertClientResponse_); }
        /// Web service synchronous operation 'InsertClient' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int InsertClient(const char *soap_endpoint_url, const char *soap_action, ns2__InsertClient *ns2__InsertClient_, ns2__InsertClientResponse &ns2__InsertClientResponse_) { return this->send_InsertClient(soap_endpoint_url, soap_action, ns2__InsertClient_) || this->recv_InsertClient(ns2__InsertClientResponse_) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_InsertClient' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_InsertClient(const char *soap_endpoint_url, const char *soap_action, ns2__InsertClient *ns2__InsertClient_);
        /// Web service asynchronous operation 'recv_InsertClient' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_InsertClient(ns2__InsertClientResponse &ns2__InsertClientResponse_);
    };
#endif
