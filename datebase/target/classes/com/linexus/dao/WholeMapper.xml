<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linexus.dao.WholeMapper">
    <cache readOnly="true"/>
    <select id='getClientList' resultType="Client">
        SELECT *
        FROM cppdatabase.client;
    </select>

    <select id="getClientByNameAndPwd" resultType="Client">
        SELECT *
        FROM cppdatabase.client
        WHERE client_name = #{name}
          AND client_pwd = #{pwd};
    </select>

    <insert id="InsertClient" parameterType="Client">
        INSERT INTO cppdatabase.client (client_name, client_phone, client_email, client_sign_time, client_pwd,
                                        client_bought, client_image)
        VALUES (#{clientName}, #{clientPhone}, #{clientEmail}, #{clientSignTime}, #{clientPwd},
                #{clientBought}, #{clientImage});
    </insert>

    <update id="updateClient" parameterType="Client">
        UPDATE cppdatabase.client
        SET client_pwd=#{clientPwd},
            client_phone=#{clientPhone}
        WHERE client_name = #{clientName};
    </update>

    <select id="getClientLikeList" resultType="Client">
        select *
        FROM cppdatabase.client
        WHERE client_name LIKE "%"#{mess}"%";
    </select>

    <delete id="deleteClientByNameAndPwd">
        delete
        FROM cppdatabase.client
        WHERE client_name = #{name}
          AND client_pwd = #{pwd};
    </delete>

    <select id="getProductTypeByProName" resultType="ProductType">
        SELECT *
        from cppdatabase.product_type
        WHERE type_product = #{proName};
    </select>

    <insert id="addProductType" parameterType="ProductType">
        INSERT INTO cppdatabase.product_type
            (type_name, type_id, type_product, type_product_id)
        VALUES (#{typeName}, #{typeId}, #{typeProduct}, #{typeProductId});
    </insert>

    <delete id="deleteProductTypeByName">
        DELETE
        FROM cppdatabase.product_type
        WHERE type_product = #{name};
    </delete>








    <select id="getProductList" resultType="Product">
        SELECT *
        FROM cppdatabase.product
        <where>
            <!-- 正确引用 product 对象的字段 -->
            <if test="productShopId != 0">
                product_shop_id = #{productShopId}
            </if>
        </where>
        <choose>
            <when test="choose == 1">
                ORDER BY product_buy_num DESC LIMIT 10
            </when>
            <when test="choose == 2">
                ORDER BY product_buy_num DESC
            </when>
            <otherwise>
                ORDER BY product_id
            </otherwise>
        </choose>
    </select>

<!--    <select id="getProductList" resultType="Product">-->
<!--        SELECT *-->
<!--        FROM cppdatabase.product-->
<!--        <where>-->
<!--            &lt;!&ndash; 如果 productShopId 不等于 0，则加入条件 &ndash;&gt;-->
<!--            <if test="product.productShopId != 0">-->
<!--                product_shop_id = #{product.productShopId}-->
<!--            </if>-->
<!--        </where>-->
<!--        <choose>-->
<!--            <when test="choose == 1">-->
<!--                &lt;!&ndash; 取前十的商品 &ndash;&gt;-->
<!--                ORDER BY product_buy_num DESC LIMIT 10-->
<!--            </when>-->
<!--            <when test="choose == 2">-->
<!--                ORDER BY product_buy_num DESC-->
<!--            </when>-->
<!--            <otherwise>-->
<!--                ORDER BY product_id  &lt;!&ndash; 添加默认排序 &ndash;&gt;-->
<!--            </otherwise>-->
<!--        </choose>-->
<!--    </select>-->



    <select id="getProductListByInfo" resultType="Product">
        SELECT * FROM cppdatabase.product
        <where>
            <if test="productShopId!=0">
                product_shop_id = #{productShopId}
            </if>
            <if test="productId!=0">
                product_id = #{productId}
            </if>
            <if test="productName!=null">
                AND product_name = #{productName}
            </if>
            <if test="productImage!=null">
                AND product_image = #{productImage}
            </if>
            <if test="productDiscount!=0">
                AND product_discount &lt; 1
            </if>
        </where>
    </select>

    <insert id="addProduct" parameterType="Product">
        INSERT INTO cppdatabase.product (product_shop_id, product_name, product_price, product_num, product_buy_num, product_image,
                                         product_discount, product_flash_sale_price, discount_start_time, discount_end_time, flash_sale_start_time, flash_sale_end_time, flash_sale_purchase_limit)
        VALUES (#{productShopId}, #{productName}, #{productPrice}, #{productNum}, #{productBuyNum}, #{productImage}, #{productDiscount}, #{productFlashSalePrice}
               , #{discountStartTime}, #{discountEndTime}, #{flashSaleStartTime}, #{flashSaleEndTime}, #{flashSalePurchaseLimit})
    </insert>

    <delete id="deleteProductByInfo">
        DELETE FROM cppdatabase.product
        <where>
            <if test="productShopId!=0">
                product_shop_id = #{productShopId}
            </if>
            <if test="productId!=0">
                product_id=#{productId}
            </if>
            <if test="productName!=null">
                AND product_name=#{productName};
            </if>
        </where>
    </delete>

    <update id="updateProductByInfo">
        UPDATE cppdatabase.product
        <set>
            <if test="productShopId!=null">product_shop_id=#{productShopId},</if>
            <if test="productName!=null">product_name=#{productName},</if>
            <if test="productPrice!=0">product_price=#{productPrice},</if>
            <if test="productNum!=-1000">product_num=#{productNum},</if>
            <if test="productImage!=null">product_image=#{productImage},</if>
            <if test="productDiscount!=0">product_discount=#{productDiscount},</if>
            <if test="productBuyNum!=-1000">product_buy_num=#{productBuyNum},</if>
            <if test="productFlashSalePrice!=0">product_flash_sale_price=#{productFlashSalePrice},</if>
            <if test="discountStartTime!=null">discount_start_time=#{discountStartTime},</if>
            <if test="discountEndTime!=null">discount_end_time=#{discountEndTime},</if>
            <if test="flashSaleStartTime!=null">flash_sale_start_time=#{flashSaleStartTime},</if>
            <if test="flashSaleEndTime!=null">flash_sale_end_time=#{flashSaleEndTime},</if>
            <if test="flashSalePurchaseLimit!=0">flash_sale_purchase_limit=#{flashSalePurchaseLimit}</if>
        </set>
        WHERE product_id = #{productId};
    </update>

<!--    更改-->
    <select id="getProductLikeList" resultType="Product"  parameterType="Product">
        SELECT *
        FROM cppdatabase.product
        <where>
            <!-- 如果 mess 不为空，则加入模糊查询条件 -->
            <if test="mess != null and mess != ''">
                product_name LIKE CONCAT('%', #{mess}, '%')
            </if>
            <!-- 如果需要根据 productShopId 过滤 -->
            <if test="product.productShopId != 0">
                AND product_shop_id = #{product.productShopId}
            </if>
        </where>
    </select>










    <select id="getOrderList" resultType="Order">
        SELECT *
        FROM cppdatabase.order
        <where>
            <if test="orderShopId != 0">
                order_shop_id = #{orderShopId}
            </if>
        </where>
    </select>

    <select id="getOrderListByInfo" resultType="Order">
        SELECT * FROM cppdatabase.order
        <where>
            <if test="orderId != 0">
                AND order_id = #{orderId}
            </if>
            <if test="orderShopId != 0">
                order_shop_id = #{orderShopId}
            </if>
            <if test="orderProductId != 0">
                AND order_product_id = #{orderProductId}
            </if>
            <if test="orderProductName != null">
                AND order_product_name = #{orderProductName}
            </if>
            <if test="orderClient != null">
                AND order_client = #{orderClient}
            </if>
            <if test="orderClientId != 0 and orderCheck != 0 and orderHide != 0">
                AND order_client_id = #{orderClientId}
                AND order_check = #{orderCheck}
                AND order_hide = #{orderHide}
            </if>
            <if test="orderClientId != 0 and orderHide != 0">
                AND order_client_id = #{orderClientId}
                AND order_hide = #{orderHide}
            </if>
            <if test="orderShip != 0">
                AND order_ship = #{orderShip}
            </if>
            <if test="orderRefund != 0">
                AND order_refund = #{orderRefund}
            </if>
        </where>
    </select>


    <insert id="addOrder" parameterType="Order">
        INSERT INTO cppdatabase.order (order_product_name, order_product_num, order_product_style, order_product_id,
                                       order_cost, order_time, order_client, order_client_id,order_check,order_hide, order_shop_id, order_ship, order_refund)
        VALUES (#{orderProductName}, #{orderProductNum}, #{orderProductStyle}, #{orderProductId}, #{orderCost},
                #{orderTime}, #{orderClient}, #{orderClientId},#{orderCheck},#{orderHide}, #{orderShopId}, #{orderShip}, #{orderRefund});
    </insert>

    <select id="getOrderLikeList" resultType="Order">
        SELECT *
        FROM cppdatabase.order
        WHERE
        (
        order_product_name LIKE CONCAT('%', #{mess}, '%')
        OR order_product_style LIKE CONCAT('%', #{mess}, '%')
        OR order_client LIKE CONCAT('%', #{mess}, '%')
        )
        <if test="orderShopId != 0">
            AND order_shop_id = #{orderShopId}
        </if>
    </select>


    <select id="getOrderListHistory" resultType="Order">
        SELECT *
        FROM cppdatabase.order
        WHERE order_check = -1;
        <if test="orderShopId != 0">
            AND order_shop_id = #{orderShopId}
        </if>
    </select>

    <update id="updateHistory" parameterType="Order">
        UPDATE cppdatabase.order
        <set>
            <if test="orderCheck!=0">order_check=#{orderCheck},</if>
            <if test="orderHide!=0">order_hide=#{orderHide}</if>
            <if test="orderShip!=0">order_ship=#{orderShip}</if>
            <if test="orderRefund!=0">order_refund=#{orderRefund}</if>
        </set>
        WHERE order_id = #{orderId};
    </update>

    <delete id="deleteShoppingCart" parameterType="Order">
        DELETE
        FROM cppdatabase.order
        WHERE order_id = #{orderId} AND
            order_client_id = #{orderClientId}
          AND order_product_id = #{orderProductId};
    </delete>








    <select id='getShopList' resultType="Shop">
        SELECT *
        FROM cppdatabase.shop;
    </select>

    <select id="getShopByNameAndPwd" resultType="Shop">
        SELECT *
        FROM cppdatabase.shop
        WHERE shop_name = #{name}
          AND shop_pwd = #{pwd};
    </select>

    <insert id="InsertShop" parameterType="Shop">
        INSERT INTO cppdatabase.shop (shop_name, shop_phone, shop_email, shop_sign_time, shop_pwd, shop_image)
        VALUES (#{shopName}, #{shopPhone}, #{shopEmail}, #{shopSignTime}, #{shopPwd}, #{shopImage});
    </insert>

    <update id="updateShop" parameterType="Shop">
        UPDATE cppdatabase.shop
        <!--    <set>作用：动态地在行首插入SET关键字，并且会删掉额外的逗号-->
        <set>
            <if test="shopName!=null">shop_name=#{shopName},</if>
            <if test="shopPhone!=null">shop_phone=#{shopPhone},</if>
            <if test="shopEmail!=null">shop_email=#{shopEmail},</if>
            <if test="shopPwd!=null">shop_pwd=#{shopPwd},</if>
            <if test="shopImage!=null">shop_image=#{shopImage}</if>
        </set>
        WHERE shop_id = #{shopId};
    </update>

    <select id="getShopLikeList" resultType="Shop">
        select *
        FROM cppdatabase.shop
        WHERE shop_name LIKE "%"#{mess}"%";
    </select>

    <delete id="deleteShopByNameAndPwd">
        delete
        FROM cppdatabase.shop
        WHERE shop_name = #{name}
          AND shop_pwd = #{pwd};
    </delete>







    <select id="getMessageFromClient" parameterType="Shop" resultType="Message">
        SELECT *
        FROM cppdatabase.message
        <where>
            <if test="shopId != 0">
                msg_shop_id = #{shopId}
            </if>
        </where>
        ORDER BY msg_id ASC;
    </select>

    <select id="getReadMessageFromClient" parameterType="Shop" resultType="Message">
        SELECT *
        FROM cppdatabase.message
        <where>
            <if test="shopId != 0">
                msg_shop_id = #{shopId}
            </if>
            AND read_status = 1
        </where>
        ORDER BY msg_id ASC;
    </select>

    <select id="getUnreadMessageFromClient" parameterType="Shop" resultType="Message">
        SELECT *
        FROM cppdatabase.message
        <where>
            <if test="shopId != 0">
                msg_shop_id = #{shopId}
            </if>
            AND read_status = 0
        </where>
        ORDER BY msg_id ASC;
    </select>


    <select id="getMessageFromShop" parameterType="Client" resultType="Message">
        SELECT *
        FROM cppdatabase.message
        <where>
            <if test="clientId != 0">
                msg_client_id = #{clientId}
            </if>
        </where>
        ORDER BY msg_id ASC;
    </select>

    <select id="getReadMessageFromShop" parameterType="Client" resultType="Message">
        SELECT *
        FROM cppdatabase.message
        <where>
            <if test="clientId != 0">
                msg_client_id = #{clientId}
            </if>
            AND read_status = 1
        </where>
        ORDER BY msg_id ASC;
    </select>


    <select id="getUnreadMessageFromShop" parameterType="Client" resultType="Message">
        SELECT *
        FROM cppdatabase.message
        <where>
            <if test="clientId != 0">
                msg_client_id = #{clientId}
            </if>
            AND read_status = 0
        </where>
        ORDER BY msg_id ASC;
    </select>

    <!-- 查询商品并加锁 -->
    <select id="selectProductForUpdate" parameterType="int" resultType="Product">
        SELECT *
        FROM product
        WHERE product_id = #{productId}
            FOR UPDATE
    </select>

    <insert id="InsertMessage" parameterType="Message">
        INSERT INTO cppdatabase.message (msg_shop_id, msg_content, msg_time, read_status, msg_client_id, msg_client_name, msg_shop_name, msg_from)
        VALUES (#{msgShopId}, #{msgContent}, #{msgTime}, #{readStatus}, #{msgClientId}, #{msgClientName}, #{msgShopName}, #{msgFrom});
    </insert>

    <update id="updateMessageFromClient">
        UPDATE cppdatabase.message
        <!--    <set>作用：动态地在行首插入SET关键字，并且会删掉额外的逗号-->
        <set>
            <if test="message.msgContent!=null">msg_content=#{message.msgContent},</if>
            <if test="message.msgTime!=null">msg_time=#{message.msgTime},</if>
            <if test="message.readStatus!=0">read_status=#{message.readStatus},</if>
            <if test="message.msgClientId!=0">msg_client_id=#{message.msgClientId},</if>
        </set>
        WHERE msg_shop_id = #{shopId};
    </update>

    <update id="updateMessageFromShop">
        UPDATE cppdatabase.message
        <!--    <set>作用：动态地在行首插入SET关键字，并且会删掉额外的逗号-->
        <set>
            <if test="message.msgShopId!=0">msg_shop_id=#{message.msgShopId},</if>
            <if test="message.msgContent!=null">msg_content=#{message.msgContent},</if>
            <if test="message.msgTime!=null">msg_time=#{message.msgTime},</if>
            <if test="message.readStatus!=0">read_status=#{message.readStatus},</if>
        </set>
        WHERE msg_client_id = #{clientId};
    </update>


    <delete id="deleteMessageFromClient">
        delete
        FROM cppdatabase.client
        WHERE msg_id = #{message.msgId}
          AND msg_shop_id = #{shopId};
    </delete>

    <delete id="deleteMessageFromShop">
        delete
        FROM cppdatabase.client
        WHERE msg_id = #{message.msgId}
          AND msg_client_id = #{clientId};
    </delete>
</mapper>