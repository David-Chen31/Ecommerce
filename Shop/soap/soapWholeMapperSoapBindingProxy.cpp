/* soapWholeMapperSoapBindingProxy.cpp
   Generated by gSOAP 2.8.135 for soap_head.h

gSOAP XML Web services tools
Copyright (C) 2000,2024, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapWholeMapperSoapBindingProxy.h"

WholeMapperSoapBindingProxy::WholeMapperSoapBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	WholeMapperSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

WholeMapperSoapBindingProxy::WholeMapperSoapBindingProxy(const WholeMapperSoapBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

WholeMapperSoapBindingProxy::WholeMapperSoapBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	WholeMapperSoapBindingProxy_init(_soap->imode, _soap->omode);
}

WholeMapperSoapBindingProxy::WholeMapperSoapBindingProxy(struct soap *_soap, const char *soap_endpoint_url)
{	this->soap = _soap;
	this->soap_own = false;
	WholeMapperSoapBindingProxy_init(_soap->imode, _soap->omode);
	soap_endpoint = soap_endpoint_url;
}

WholeMapperSoapBindingProxy::WholeMapperSoapBindingProxy(const char *soap_endpoint_url)
{	this->soap = soap_new();
	this->soap_own = true;
	WholeMapperSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = soap_endpoint_url;
}

WholeMapperSoapBindingProxy::WholeMapperSoapBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	WholeMapperSoapBindingProxy_init(iomode, iomode);
}

WholeMapperSoapBindingProxy::WholeMapperSoapBindingProxy(const char *soap_endpoint_url, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	WholeMapperSoapBindingProxy_init(iomode, iomode);
	soap_endpoint = soap_endpoint_url;
}

WholeMapperSoapBindingProxy::WholeMapperSoapBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	WholeMapperSoapBindingProxy_init(imode, omode);
}

WholeMapperSoapBindingProxy::~WholeMapperSoapBindingProxy()
{	if (this->soap_own)
	{	WholeMapperSoapBindingProxy::destroy();
		soap_free(this->soap);
	}
}

void WholeMapperSoapBindingProxy::WholeMapperSoapBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        { "SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL },
        { "SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL },
        { "xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL },
        { "xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL },
        { "ns1", "http://service.linexus.com/", NULL, NULL },
        { "ns2", "http://dao.linexus.com/", NULL, NULL },
        { NULL, NULL, NULL, NULL} /* end of namespaces[] */
    };
	soap_set_namespaces(this->soap, namespaces);
}

WholeMapperSoapBindingProxy *WholeMapperSoapBindingProxy::copy()
{	WholeMapperSoapBindingProxy *dup = SOAP_NEW_UNMANAGED(WholeMapperSoapBindingProxy);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}

WholeMapperSoapBindingProxy& WholeMapperSoapBindingProxy::operator=(const WholeMapperSoapBindingProxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void WholeMapperSoapBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void WholeMapperSoapBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	WholeMapperSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void WholeMapperSoapBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

::SOAP_ENV__Header *WholeMapperSoapBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *WholeMapperSoapBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *WholeMapperSoapBindingProxy::soap_fault_subcode()
{	return ::soap_fault_subcode(this->soap);
}

const char *WholeMapperSoapBindingProxy::soap_fault_string()
{	return ::soap_fault_string(this->soap);
}

const char *WholeMapperSoapBindingProxy::soap_fault_detail()
{	return ::soap_fault_detail(this->soap);
}

int WholeMapperSoapBindingProxy::soap_close_socket()
{	return ::soap_closesock(this->soap);
}

int WholeMapperSoapBindingProxy::soap_force_close_socket()
{	return ::soap_force_closesock(this->soap);
}

void WholeMapperSoapBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void WholeMapperSoapBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *WholeMapperSoapBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int WholeMapperSoapBindingProxy::send_selectProductForUpdate(const char *soap_endpoint_url, const char *soap_action, ns2__selectProductForUpdate *ns2__selectProductForUpdate_)
{
	struct __ns1__selectProductForUpdate soap_tmp___ns1__selectProductForUpdate;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__selectProductForUpdate.ns2__selectProductForUpdate_ = ns2__selectProductForUpdate_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__selectProductForUpdate(soap, &soap_tmp___ns1__selectProductForUpdate);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__selectProductForUpdate(soap, &soap_tmp___ns1__selectProductForUpdate, "-ns1:selectProductForUpdate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__selectProductForUpdate(soap, &soap_tmp___ns1__selectProductForUpdate, "-ns1:selectProductForUpdate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_selectProductForUpdate(ns2__selectProductForUpdateResponse &ns2__selectProductForUpdateResponse_)
{
	ns2__selectProductForUpdateResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__selectProductForUpdateResponse_.soap_get(soap, "ns2:selectProductForUpdateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_addProduct(const char *soap_endpoint_url, const char *soap_action, ns2__addProduct *ns2__addProduct_)
{
	struct __ns1__addProduct soap_tmp___ns1__addProduct;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__addProduct.ns2__addProduct_ = ns2__addProduct_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__addProduct(soap, &soap_tmp___ns1__addProduct);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__addProduct(soap, &soap_tmp___ns1__addProduct, "-ns1:addProduct", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__addProduct(soap, &soap_tmp___ns1__addProduct, "-ns1:addProduct", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_addProduct(ns2__addProductResponse &ns2__addProductResponse_)
{
	ns2__addProductResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__addProductResponse_.soap_get(soap, "ns2:addProductResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_deleteProductTypeByName(const char *soap_endpoint_url, const char *soap_action, ns2__deleteProductTypeByName *ns2__deleteProductTypeByName_)
{
	struct __ns1__deleteProductTypeByName soap_tmp___ns1__deleteProductTypeByName;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__deleteProductTypeByName.ns2__deleteProductTypeByName_ = ns2__deleteProductTypeByName_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__deleteProductTypeByName(soap, &soap_tmp___ns1__deleteProductTypeByName);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__deleteProductTypeByName(soap, &soap_tmp___ns1__deleteProductTypeByName, "-ns1:deleteProductTypeByName", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__deleteProductTypeByName(soap, &soap_tmp___ns1__deleteProductTypeByName, "-ns1:deleteProductTypeByName", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_deleteProductTypeByName(ns2__deleteProductTypeByNameResponse &ns2__deleteProductTypeByNameResponse_)
{
	ns2__deleteProductTypeByNameResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__deleteProductTypeByNameResponse_.soap_get(soap, "ns2:deleteProductTypeByNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getOrderList(const char *soap_endpoint_url, const char *soap_action, ns2__getOrderList *ns2__getOrderList_)
{
	struct __ns1__getOrderList soap_tmp___ns1__getOrderList;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getOrderList.ns2__getOrderList_ = ns2__getOrderList_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getOrderList(soap, &soap_tmp___ns1__getOrderList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getOrderList(soap, &soap_tmp___ns1__getOrderList, "-ns1:getOrderList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getOrderList(soap, &soap_tmp___ns1__getOrderList, "-ns1:getOrderList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getOrderList(ns2__getOrderListResponse &ns2__getOrderListResponse_)
{
	ns2__getOrderListResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getOrderListResponse_.soap_get(soap, "ns2:getOrderListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getShopByNameAndPwd(const char *soap_endpoint_url, const char *soap_action, ns2__getShopByNameAndPwd *ns2__getShopByNameAndPwd_)
{
	struct __ns1__getShopByNameAndPwd soap_tmp___ns1__getShopByNameAndPwd;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getShopByNameAndPwd.ns2__getShopByNameAndPwd_ = ns2__getShopByNameAndPwd_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getShopByNameAndPwd(soap, &soap_tmp___ns1__getShopByNameAndPwd);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getShopByNameAndPwd(soap, &soap_tmp___ns1__getShopByNameAndPwd, "-ns1:getShopByNameAndPwd", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getShopByNameAndPwd(soap, &soap_tmp___ns1__getShopByNameAndPwd, "-ns1:getShopByNameAndPwd", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getShopByNameAndPwd(ns2__getShopByNameAndPwdResponse &ns2__getShopByNameAndPwdResponse_)
{
	ns2__getShopByNameAndPwdResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getShopByNameAndPwdResponse_.soap_get(soap, "ns2:getShopByNameAndPwdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_updateShop(const char *soap_endpoint_url, const char *soap_action, ns2__updateShop *ns2__updateShop_)
{
	struct __ns1__updateShop soap_tmp___ns1__updateShop;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__updateShop.ns2__updateShop_ = ns2__updateShop_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__updateShop(soap, &soap_tmp___ns1__updateShop);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__updateShop(soap, &soap_tmp___ns1__updateShop, "-ns1:updateShop", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__updateShop(soap, &soap_tmp___ns1__updateShop, "-ns1:updateShop", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_updateShop(ns2__updateShopResponse &ns2__updateShopResponse_)
{
	ns2__updateShopResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__updateShopResponse_.soap_get(soap, "ns2:updateShopResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getProductListByInfo(const char *soap_endpoint_url, const char *soap_action, ns2__getProductListByInfo *ns2__getProductListByInfo_)
{
	struct __ns1__getProductListByInfo soap_tmp___ns1__getProductListByInfo;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getProductListByInfo.ns2__getProductListByInfo_ = ns2__getProductListByInfo_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getProductListByInfo(soap, &soap_tmp___ns1__getProductListByInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getProductListByInfo(soap, &soap_tmp___ns1__getProductListByInfo, "-ns1:getProductListByInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getProductListByInfo(soap, &soap_tmp___ns1__getProductListByInfo, "-ns1:getProductListByInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getProductListByInfo(ns2__getProductListByInfoResponse &ns2__getProductListByInfoResponse_)
{
	ns2__getProductListByInfoResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getProductListByInfoResponse_.soap_get(soap, "ns2:getProductListByInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getReadMessageFromShop(const char *soap_endpoint_url, const char *soap_action, ns2__getReadMessageFromShop *ns2__getReadMessageFromShop_)
{
	struct __ns1__getReadMessageFromShop soap_tmp___ns1__getReadMessageFromShop;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getReadMessageFromShop.ns2__getReadMessageFromShop_ = ns2__getReadMessageFromShop_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getReadMessageFromShop(soap, &soap_tmp___ns1__getReadMessageFromShop);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getReadMessageFromShop(soap, &soap_tmp___ns1__getReadMessageFromShop, "-ns1:getReadMessageFromShop", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getReadMessageFromShop(soap, &soap_tmp___ns1__getReadMessageFromShop, "-ns1:getReadMessageFromShop", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getReadMessageFromShop(ns2__getReadMessageFromShopResponse &ns2__getReadMessageFromShopResponse_)
{
	ns2__getReadMessageFromShopResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getReadMessageFromShopResponse_.soap_get(soap, "ns2:getReadMessageFromShopResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_updateClient(const char *soap_endpoint_url, const char *soap_action, ns2__updateClient *ns2__updateClient_)
{
	struct __ns1__updateClient soap_tmp___ns1__updateClient;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__updateClient.ns2__updateClient_ = ns2__updateClient_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__updateClient(soap, &soap_tmp___ns1__updateClient);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__updateClient(soap, &soap_tmp___ns1__updateClient, "-ns1:updateClient", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__updateClient(soap, &soap_tmp___ns1__updateClient, "-ns1:updateClient", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_updateClient(ns2__updateClientResponse &ns2__updateClientResponse_)
{
	ns2__updateClientResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__updateClientResponse_.soap_get(soap, "ns2:updateClientResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_deleteProductByInfo(const char *soap_endpoint_url, const char *soap_action, ns2__deleteProductByInfo *ns2__deleteProductByInfo_)
{
	struct __ns1__deleteProductByInfo soap_tmp___ns1__deleteProductByInfo;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__deleteProductByInfo.ns2__deleteProductByInfo_ = ns2__deleteProductByInfo_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__deleteProductByInfo(soap, &soap_tmp___ns1__deleteProductByInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__deleteProductByInfo(soap, &soap_tmp___ns1__deleteProductByInfo, "-ns1:deleteProductByInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__deleteProductByInfo(soap, &soap_tmp___ns1__deleteProductByInfo, "-ns1:deleteProductByInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_deleteProductByInfo(ns2__deleteProductByInfoResponse &ns2__deleteProductByInfoResponse_)
{
	ns2__deleteProductByInfoResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__deleteProductByInfoResponse_.soap_get(soap, "ns2:deleteProductByInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_deleteClientByNameAndPwd(const char *soap_endpoint_url, const char *soap_action, ns2__deleteClientByNameAndPwd *ns2__deleteClientByNameAndPwd_)
{
	struct __ns1__deleteClientByNameAndPwd soap_tmp___ns1__deleteClientByNameAndPwd;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__deleteClientByNameAndPwd.ns2__deleteClientByNameAndPwd_ = ns2__deleteClientByNameAndPwd_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__deleteClientByNameAndPwd(soap, &soap_tmp___ns1__deleteClientByNameAndPwd);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__deleteClientByNameAndPwd(soap, &soap_tmp___ns1__deleteClientByNameAndPwd, "-ns1:deleteClientByNameAndPwd", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__deleteClientByNameAndPwd(soap, &soap_tmp___ns1__deleteClientByNameAndPwd, "-ns1:deleteClientByNameAndPwd", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_deleteClientByNameAndPwd(ns2__deleteClientByNameAndPwdResponse &ns2__deleteClientByNameAndPwdResponse_)
{
	ns2__deleteClientByNameAndPwdResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__deleteClientByNameAndPwdResponse_.soap_get(soap, "ns2:deleteClientByNameAndPwdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_InsertShop(const char *soap_endpoint_url, const char *soap_action, ns2__InsertShop *ns2__InsertShop_)
{
	struct __ns1__InsertShop soap_tmp___ns1__InsertShop;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__InsertShop.ns2__InsertShop_ = ns2__InsertShop_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__InsertShop(soap, &soap_tmp___ns1__InsertShop);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InsertShop(soap, &soap_tmp___ns1__InsertShop, "-ns1:InsertShop", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InsertShop(soap, &soap_tmp___ns1__InsertShop, "-ns1:InsertShop", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_InsertShop(ns2__InsertShopResponse &ns2__InsertShopResponse_)
{
	ns2__InsertShopResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__InsertShopResponse_.soap_get(soap, "ns2:InsertShopResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_updateMessageFromShop(const char *soap_endpoint_url, const char *soap_action, ns2__updateMessageFromShop *ns2__updateMessageFromShop_)
{
	struct __ns1__updateMessageFromShop soap_tmp___ns1__updateMessageFromShop;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__updateMessageFromShop.ns2__updateMessageFromShop_ = ns2__updateMessageFromShop_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__updateMessageFromShop(soap, &soap_tmp___ns1__updateMessageFromShop);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__updateMessageFromShop(soap, &soap_tmp___ns1__updateMessageFromShop, "-ns1:updateMessageFromShop", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__updateMessageFromShop(soap, &soap_tmp___ns1__updateMessageFromShop, "-ns1:updateMessageFromShop", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_updateMessageFromShop(ns2__updateMessageFromShopResponse &ns2__updateMessageFromShopResponse_)
{
	ns2__updateMessageFromShopResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__updateMessageFromShopResponse_.soap_get(soap, "ns2:updateMessageFromShopResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getProductTypeByProName(const char *soap_endpoint_url, const char *soap_action, ns2__getProductTypeByProName *ns2__getProductTypeByProName_)
{
	struct __ns1__getProductTypeByProName soap_tmp___ns1__getProductTypeByProName;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getProductTypeByProName.ns2__getProductTypeByProName_ = ns2__getProductTypeByProName_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getProductTypeByProName(soap, &soap_tmp___ns1__getProductTypeByProName);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getProductTypeByProName(soap, &soap_tmp___ns1__getProductTypeByProName, "-ns1:getProductTypeByProName", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getProductTypeByProName(soap, &soap_tmp___ns1__getProductTypeByProName, "-ns1:getProductTypeByProName", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getProductTypeByProName(ns2__getProductTypeByProNameResponse &ns2__getProductTypeByProNameResponse_)
{
	ns2__getProductTypeByProNameResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getProductTypeByProNameResponse_.soap_get(soap, "ns2:getProductTypeByProNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getClientList(const char *soap_endpoint_url, const char *soap_action, ns2__getClientList *ns2__getClientList_)
{
	struct __ns1__getClientList soap_tmp___ns1__getClientList;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getClientList.ns2__getClientList_ = ns2__getClientList_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getClientList(soap, &soap_tmp___ns1__getClientList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getClientList(soap, &soap_tmp___ns1__getClientList, "-ns1:getClientList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getClientList(soap, &soap_tmp___ns1__getClientList, "-ns1:getClientList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getClientList(ns2__getClientListResponse &ns2__getClientListResponse_)
{
	ns2__getClientListResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getClientListResponse_.soap_get(soap, "ns2:getClientListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_purchaseProduct(const char *soap_endpoint_url, const char *soap_action, ns2__purchaseProduct *ns2__purchaseProduct_)
{
	struct __ns1__purchaseProduct soap_tmp___ns1__purchaseProduct;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__purchaseProduct.ns2__purchaseProduct_ = ns2__purchaseProduct_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__purchaseProduct(soap, &soap_tmp___ns1__purchaseProduct);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__purchaseProduct(soap, &soap_tmp___ns1__purchaseProduct, "-ns1:purchaseProduct", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__purchaseProduct(soap, &soap_tmp___ns1__purchaseProduct, "-ns1:purchaseProduct", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_purchaseProduct(ns2__purchaseProductResponse &ns2__purchaseProductResponse_)
{
	ns2__purchaseProductResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__purchaseProductResponse_.soap_get(soap, "ns2:purchaseProductResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_updateMessageFromClient(const char *soap_endpoint_url, const char *soap_action, ns2__updateMessageFromClient *ns2__updateMessageFromClient_)
{
	struct __ns1__updateMessageFromClient soap_tmp___ns1__updateMessageFromClient;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__updateMessageFromClient.ns2__updateMessageFromClient_ = ns2__updateMessageFromClient_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__updateMessageFromClient(soap, &soap_tmp___ns1__updateMessageFromClient);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__updateMessageFromClient(soap, &soap_tmp___ns1__updateMessageFromClient, "-ns1:updateMessageFromClient", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__updateMessageFromClient(soap, &soap_tmp___ns1__updateMessageFromClient, "-ns1:updateMessageFromClient", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_updateMessageFromClient(ns2__updateMessageFromClientResponse &ns2__updateMessageFromClientResponse_)
{
	ns2__updateMessageFromClientResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__updateMessageFromClientResponse_.soap_get(soap, "ns2:updateMessageFromClientResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getUnreadMessageFromClient(const char *soap_endpoint_url, const char *soap_action, ns2__getUnreadMessageFromClient *ns2__getUnreadMessageFromClient_)
{
	struct __ns1__getUnreadMessageFromClient soap_tmp___ns1__getUnreadMessageFromClient;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getUnreadMessageFromClient.ns2__getUnreadMessageFromClient_ = ns2__getUnreadMessageFromClient_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getUnreadMessageFromClient(soap, &soap_tmp___ns1__getUnreadMessageFromClient);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getUnreadMessageFromClient(soap, &soap_tmp___ns1__getUnreadMessageFromClient, "-ns1:getUnreadMessageFromClient", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getUnreadMessageFromClient(soap, &soap_tmp___ns1__getUnreadMessageFromClient, "-ns1:getUnreadMessageFromClient", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getUnreadMessageFromClient(ns2__getUnreadMessageFromClientResponse &ns2__getUnreadMessageFromClientResponse_)
{
	ns2__getUnreadMessageFromClientResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getUnreadMessageFromClientResponse_.soap_get(soap, "ns2:getUnreadMessageFromClientResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_updateProductByInfo(const char *soap_endpoint_url, const char *soap_action, ns2__updateProductByInfo *ns2__updateProductByInfo_)
{
	struct __ns1__updateProductByInfo soap_tmp___ns1__updateProductByInfo;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__updateProductByInfo.ns2__updateProductByInfo_ = ns2__updateProductByInfo_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__updateProductByInfo(soap, &soap_tmp___ns1__updateProductByInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__updateProductByInfo(soap, &soap_tmp___ns1__updateProductByInfo, "-ns1:updateProductByInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__updateProductByInfo(soap, &soap_tmp___ns1__updateProductByInfo, "-ns1:updateProductByInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_updateProductByInfo(ns2__updateProductByInfoResponse &ns2__updateProductByInfoResponse_)
{
	ns2__updateProductByInfoResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__updateProductByInfoResponse_.soap_get(soap, "ns2:updateProductByInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getMessageFromClient(const char *soap_endpoint_url, const char *soap_action, ns2__getMessageFromClient *ns2__getMessageFromClient_)
{
	struct __ns1__getMessageFromClient soap_tmp___ns1__getMessageFromClient;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getMessageFromClient.ns2__getMessageFromClient_ = ns2__getMessageFromClient_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getMessageFromClient(soap, &soap_tmp___ns1__getMessageFromClient);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getMessageFromClient(soap, &soap_tmp___ns1__getMessageFromClient, "-ns1:getMessageFromClient", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getMessageFromClient(soap, &soap_tmp___ns1__getMessageFromClient, "-ns1:getMessageFromClient", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getMessageFromClient(ns2__getMessageFromClientResponse &ns2__getMessageFromClientResponse_)
{
	ns2__getMessageFromClientResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getMessageFromClientResponse_.soap_get(soap, "ns2:getMessageFromClientResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_addOrder(const char *soap_endpoint_url, const char *soap_action, ns2__addOrder *ns2__addOrder_)
{
	struct __ns1__addOrder soap_tmp___ns1__addOrder;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__addOrder.ns2__addOrder_ = ns2__addOrder_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__addOrder(soap, &soap_tmp___ns1__addOrder);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__addOrder(soap, &soap_tmp___ns1__addOrder, "-ns1:addOrder", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__addOrder(soap, &soap_tmp___ns1__addOrder, "-ns1:addOrder", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_addOrder(ns2__addOrderResponse &ns2__addOrderResponse_)
{
	ns2__addOrderResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__addOrderResponse_.soap_get(soap, "ns2:addOrderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_deleteShopByNameAndPwd(const char *soap_endpoint_url, const char *soap_action, ns2__deleteShopByNameAndPwd *ns2__deleteShopByNameAndPwd_)
{
	struct __ns1__deleteShopByNameAndPwd soap_tmp___ns1__deleteShopByNameAndPwd;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__deleteShopByNameAndPwd.ns2__deleteShopByNameAndPwd_ = ns2__deleteShopByNameAndPwd_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__deleteShopByNameAndPwd(soap, &soap_tmp___ns1__deleteShopByNameAndPwd);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__deleteShopByNameAndPwd(soap, &soap_tmp___ns1__deleteShopByNameAndPwd, "-ns1:deleteShopByNameAndPwd", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__deleteShopByNameAndPwd(soap, &soap_tmp___ns1__deleteShopByNameAndPwd, "-ns1:deleteShopByNameAndPwd", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_deleteShopByNameAndPwd(ns2__deleteShopByNameAndPwdResponse &ns2__deleteShopByNameAndPwdResponse_)
{
	ns2__deleteShopByNameAndPwdResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__deleteShopByNameAndPwdResponse_.soap_get(soap, "ns2:deleteShopByNameAndPwdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getProductList(const char *soap_endpoint_url, const char *soap_action, ns2__getProductList *ns2__getProductList_)
{
	struct __ns1__getProductList soap_tmp___ns1__getProductList;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getProductList.ns2__getProductList_ = ns2__getProductList_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getProductList(soap, &soap_tmp___ns1__getProductList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getProductList(soap, &soap_tmp___ns1__getProductList, "-ns1:getProductList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getProductList(soap, &soap_tmp___ns1__getProductList, "-ns1:getProductList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getProductList(ns2__getProductListResponse &ns2__getProductListResponse_)
{
	ns2__getProductListResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getProductListResponse_.soap_get(soap, "ns2:getProductListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getOrderListHistory(const char *soap_endpoint_url, const char *soap_action, ns2__getOrderListHistory *ns2__getOrderListHistory_)
{
	struct __ns1__getOrderListHistory soap_tmp___ns1__getOrderListHistory;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getOrderListHistory.ns2__getOrderListHistory_ = ns2__getOrderListHistory_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getOrderListHistory(soap, &soap_tmp___ns1__getOrderListHistory);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getOrderListHistory(soap, &soap_tmp___ns1__getOrderListHistory, "-ns1:getOrderListHistory", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getOrderListHistory(soap, &soap_tmp___ns1__getOrderListHistory, "-ns1:getOrderListHistory", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getOrderListHistory(ns2__getOrderListHistoryResponse &ns2__getOrderListHistoryResponse_)
{
	ns2__getOrderListHistoryResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getOrderListHistoryResponse_.soap_get(soap, "ns2:getOrderListHistoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getReadMessageFromClient(const char *soap_endpoint_url, const char *soap_action, ns2__getReadMessageFromClient *ns2__getReadMessageFromClient_)
{
	struct __ns1__getReadMessageFromClient soap_tmp___ns1__getReadMessageFromClient;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getReadMessageFromClient.ns2__getReadMessageFromClient_ = ns2__getReadMessageFromClient_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getReadMessageFromClient(soap, &soap_tmp___ns1__getReadMessageFromClient);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getReadMessageFromClient(soap, &soap_tmp___ns1__getReadMessageFromClient, "-ns1:getReadMessageFromClient", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getReadMessageFromClient(soap, &soap_tmp___ns1__getReadMessageFromClient, "-ns1:getReadMessageFromClient", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getReadMessageFromClient(ns2__getReadMessageFromClientResponse &ns2__getReadMessageFromClientResponse_)
{
	ns2__getReadMessageFromClientResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getReadMessageFromClientResponse_.soap_get(soap, "ns2:getReadMessageFromClientResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_updateHistory(const char *soap_endpoint_url, const char *soap_action, ns2__updateHistory *ns2__updateHistory_)
{
	struct __ns1__updateHistory soap_tmp___ns1__updateHistory;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__updateHistory.ns2__updateHistory_ = ns2__updateHistory_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__updateHistory(soap, &soap_tmp___ns1__updateHistory);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__updateHistory(soap, &soap_tmp___ns1__updateHistory, "-ns1:updateHistory", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__updateHistory(soap, &soap_tmp___ns1__updateHistory, "-ns1:updateHistory", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_updateHistory(ns2__updateHistoryResponse &ns2__updateHistoryResponse_)
{
	ns2__updateHistoryResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__updateHistoryResponse_.soap_get(soap, "ns2:updateHistoryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_InsertMessage(const char *soap_endpoint_url, const char *soap_action, ns2__InsertMessage *ns2__InsertMessage_)
{
	struct __ns1__InsertMessage soap_tmp___ns1__InsertMessage;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__InsertMessage.ns2__InsertMessage_ = ns2__InsertMessage_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__InsertMessage(soap, &soap_tmp___ns1__InsertMessage);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InsertMessage(soap, &soap_tmp___ns1__InsertMessage, "-ns1:InsertMessage", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InsertMessage(soap, &soap_tmp___ns1__InsertMessage, "-ns1:InsertMessage", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_InsertMessage(ns2__InsertMessageResponse &ns2__InsertMessageResponse_)
{
	ns2__InsertMessageResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__InsertMessageResponse_.soap_get(soap, "ns2:InsertMessageResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getShopLikeList(const char *soap_endpoint_url, const char *soap_action, ns2__getShopLikeList *ns2__getShopLikeList_)
{
	struct __ns1__getShopLikeList soap_tmp___ns1__getShopLikeList;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getShopLikeList.ns2__getShopLikeList_ = ns2__getShopLikeList_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getShopLikeList(soap, &soap_tmp___ns1__getShopLikeList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getShopLikeList(soap, &soap_tmp___ns1__getShopLikeList, "-ns1:getShopLikeList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getShopLikeList(soap, &soap_tmp___ns1__getShopLikeList, "-ns1:getShopLikeList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getShopLikeList(ns2__getShopLikeListResponse &ns2__getShopLikeListResponse_)
{
	ns2__getShopLikeListResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getShopLikeListResponse_.soap_get(soap, "ns2:getShopLikeListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getMessageFromShop(const char *soap_endpoint_url, const char *soap_action, ns2__getMessageFromShop *ns2__getMessageFromShop_)
{
	struct __ns1__getMessageFromShop soap_tmp___ns1__getMessageFromShop;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getMessageFromShop.ns2__getMessageFromShop_ = ns2__getMessageFromShop_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getMessageFromShop(soap, &soap_tmp___ns1__getMessageFromShop);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getMessageFromShop(soap, &soap_tmp___ns1__getMessageFromShop, "-ns1:getMessageFromShop", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getMessageFromShop(soap, &soap_tmp___ns1__getMessageFromShop, "-ns1:getMessageFromShop", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getMessageFromShop(ns2__getMessageFromShopResponse &ns2__getMessageFromShopResponse_)
{
	ns2__getMessageFromShopResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getMessageFromShopResponse_.soap_get(soap, "ns2:getMessageFromShopResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_deleteMessageFromShop(const char *soap_endpoint_url, const char *soap_action, ns2__deleteMessageFromShop *ns2__deleteMessageFromShop_)
{
	struct __ns1__deleteMessageFromShop soap_tmp___ns1__deleteMessageFromShop;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__deleteMessageFromShop.ns2__deleteMessageFromShop_ = ns2__deleteMessageFromShop_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__deleteMessageFromShop(soap, &soap_tmp___ns1__deleteMessageFromShop);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__deleteMessageFromShop(soap, &soap_tmp___ns1__deleteMessageFromShop, "-ns1:deleteMessageFromShop", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__deleteMessageFromShop(soap, &soap_tmp___ns1__deleteMessageFromShop, "-ns1:deleteMessageFromShop", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_deleteMessageFromShop(ns2__deleteMessageFromShopResponse &ns2__deleteMessageFromShopResponse_)
{
	ns2__deleteMessageFromShopResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__deleteMessageFromShopResponse_.soap_get(soap, "ns2:deleteMessageFromShopResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getOrderLikeList(const char *soap_endpoint_url, const char *soap_action, ns2__getOrderLikeList *ns2__getOrderLikeList_)
{
	struct __ns1__getOrderLikeList soap_tmp___ns1__getOrderLikeList;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getOrderLikeList.ns2__getOrderLikeList_ = ns2__getOrderLikeList_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getOrderLikeList(soap, &soap_tmp___ns1__getOrderLikeList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getOrderLikeList(soap, &soap_tmp___ns1__getOrderLikeList, "-ns1:getOrderLikeList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getOrderLikeList(soap, &soap_tmp___ns1__getOrderLikeList, "-ns1:getOrderLikeList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getOrderLikeList(ns2__getOrderLikeListResponse &ns2__getOrderLikeListResponse_)
{
	ns2__getOrderLikeListResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getOrderLikeListResponse_.soap_get(soap, "ns2:getOrderLikeListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getUnreadMessageFromShop(const char *soap_endpoint_url, const char *soap_action, ns2__getUnreadMessageFromShop *ns2__getUnreadMessageFromShop_)
{
	struct __ns1__getUnreadMessageFromShop soap_tmp___ns1__getUnreadMessageFromShop;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getUnreadMessageFromShop.ns2__getUnreadMessageFromShop_ = ns2__getUnreadMessageFromShop_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getUnreadMessageFromShop(soap, &soap_tmp___ns1__getUnreadMessageFromShop);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getUnreadMessageFromShop(soap, &soap_tmp___ns1__getUnreadMessageFromShop, "-ns1:getUnreadMessageFromShop", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getUnreadMessageFromShop(soap, &soap_tmp___ns1__getUnreadMessageFromShop, "-ns1:getUnreadMessageFromShop", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getUnreadMessageFromShop(ns2__getUnreadMessageFromShopResponse &ns2__getUnreadMessageFromShopResponse_)
{
	ns2__getUnreadMessageFromShopResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getUnreadMessageFromShopResponse_.soap_get(soap, "ns2:getUnreadMessageFromShopResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getClientLikeList(const char *soap_endpoint_url, const char *soap_action, ns2__getClientLikeList *ns2__getClientLikeList_)
{
	struct __ns1__getClientLikeList soap_tmp___ns1__getClientLikeList;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getClientLikeList.ns2__getClientLikeList_ = ns2__getClientLikeList_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getClientLikeList(soap, &soap_tmp___ns1__getClientLikeList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getClientLikeList(soap, &soap_tmp___ns1__getClientLikeList, "-ns1:getClientLikeList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getClientLikeList(soap, &soap_tmp___ns1__getClientLikeList, "-ns1:getClientLikeList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getClientLikeList(ns2__getClientLikeListResponse &ns2__getClientLikeListResponse_)
{
	ns2__getClientLikeListResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getClientLikeListResponse_.soap_get(soap, "ns2:getClientLikeListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getShopList(const char *soap_endpoint_url, const char *soap_action, ns2__getShopList *ns2__getShopList_)
{
	struct __ns1__getShopList soap_tmp___ns1__getShopList;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getShopList.ns2__getShopList_ = ns2__getShopList_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getShopList(soap, &soap_tmp___ns1__getShopList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getShopList(soap, &soap_tmp___ns1__getShopList, "-ns1:getShopList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getShopList(soap, &soap_tmp___ns1__getShopList, "-ns1:getShopList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getShopList(ns2__getShopListResponse &ns2__getShopListResponse_)
{
	ns2__getShopListResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getShopListResponse_.soap_get(soap, "ns2:getShopListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getOrderListByInfo(const char *soap_endpoint_url, const char *soap_action, ns2__getOrderListByInfo *ns2__getOrderListByInfo_)
{
	struct __ns1__getOrderListByInfo soap_tmp___ns1__getOrderListByInfo;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getOrderListByInfo.ns2__getOrderListByInfo_ = ns2__getOrderListByInfo_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getOrderListByInfo(soap, &soap_tmp___ns1__getOrderListByInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getOrderListByInfo(soap, &soap_tmp___ns1__getOrderListByInfo, "-ns1:getOrderListByInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getOrderListByInfo(soap, &soap_tmp___ns1__getOrderListByInfo, "-ns1:getOrderListByInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getOrderListByInfo(ns2__getOrderListByInfoResponse &ns2__getOrderListByInfoResponse_)
{
	ns2__getOrderListByInfoResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getOrderListByInfoResponse_.soap_get(soap, "ns2:getOrderListByInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_addProductType(const char *soap_endpoint_url, const char *soap_action, ns2__addProductType *ns2__addProductType_)
{
	struct __ns1__addProductType soap_tmp___ns1__addProductType;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__addProductType.ns2__addProductType_ = ns2__addProductType_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__addProductType(soap, &soap_tmp___ns1__addProductType);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__addProductType(soap, &soap_tmp___ns1__addProductType, "-ns1:addProductType", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__addProductType(soap, &soap_tmp___ns1__addProductType, "-ns1:addProductType", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_addProductType(ns2__addProductTypeResponse &ns2__addProductTypeResponse_)
{
	ns2__addProductTypeResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__addProductTypeResponse_.soap_get(soap, "ns2:addProductTypeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_deleteMessageFromClient(const char *soap_endpoint_url, const char *soap_action, ns2__deleteMessageFromClient *ns2__deleteMessageFromClient_)
{
	struct __ns1__deleteMessageFromClient soap_tmp___ns1__deleteMessageFromClient;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__deleteMessageFromClient.ns2__deleteMessageFromClient_ = ns2__deleteMessageFromClient_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__deleteMessageFromClient(soap, &soap_tmp___ns1__deleteMessageFromClient);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__deleteMessageFromClient(soap, &soap_tmp___ns1__deleteMessageFromClient, "-ns1:deleteMessageFromClient", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__deleteMessageFromClient(soap, &soap_tmp___ns1__deleteMessageFromClient, "-ns1:deleteMessageFromClient", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_deleteMessageFromClient(ns2__deleteMessageFromClientResponse &ns2__deleteMessageFromClientResponse_)
{
	ns2__deleteMessageFromClientResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__deleteMessageFromClientResponse_.soap_get(soap, "ns2:deleteMessageFromClientResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getProductLikeList(const char *soap_endpoint_url, const char *soap_action, ns2__getProductLikeList *ns2__getProductLikeList_)
{
	struct __ns1__getProductLikeList soap_tmp___ns1__getProductLikeList;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getProductLikeList.ns2__getProductLikeList_ = ns2__getProductLikeList_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getProductLikeList(soap, &soap_tmp___ns1__getProductLikeList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getProductLikeList(soap, &soap_tmp___ns1__getProductLikeList, "-ns1:getProductLikeList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getProductLikeList(soap, &soap_tmp___ns1__getProductLikeList, "-ns1:getProductLikeList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getProductLikeList(ns2__getProductLikeListResponse &ns2__getProductLikeListResponse_)
{
	ns2__getProductLikeListResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getProductLikeListResponse_.soap_get(soap, "ns2:getProductLikeListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_getClientByNameAndPwd(const char *soap_endpoint_url, const char *soap_action, ns2__getClientByNameAndPwd *ns2__getClientByNameAndPwd_)
{
	struct __ns1__getClientByNameAndPwd soap_tmp___ns1__getClientByNameAndPwd;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getClientByNameAndPwd.ns2__getClientByNameAndPwd_ = ns2__getClientByNameAndPwd_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__getClientByNameAndPwd(soap, &soap_tmp___ns1__getClientByNameAndPwd);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getClientByNameAndPwd(soap, &soap_tmp___ns1__getClientByNameAndPwd, "-ns1:getClientByNameAndPwd", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getClientByNameAndPwd(soap, &soap_tmp___ns1__getClientByNameAndPwd, "-ns1:getClientByNameAndPwd", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_getClientByNameAndPwd(ns2__getClientByNameAndPwdResponse &ns2__getClientByNameAndPwdResponse_)
{
	ns2__getClientByNameAndPwdResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getClientByNameAndPwdResponse_.soap_get(soap, "ns2:getClientByNameAndPwdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_deleteShoppingCart(const char *soap_endpoint_url, const char *soap_action, ns2__deleteShoppingCart *ns2__deleteShoppingCart_)
{
	struct __ns1__deleteShoppingCart soap_tmp___ns1__deleteShoppingCart;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__deleteShoppingCart.ns2__deleteShoppingCart_ = ns2__deleteShoppingCart_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__deleteShoppingCart(soap, &soap_tmp___ns1__deleteShoppingCart);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__deleteShoppingCart(soap, &soap_tmp___ns1__deleteShoppingCart, "-ns1:deleteShoppingCart", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__deleteShoppingCart(soap, &soap_tmp___ns1__deleteShoppingCart, "-ns1:deleteShoppingCart", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_deleteShoppingCart(ns2__deleteShoppingCartResponse &ns2__deleteShoppingCartResponse_)
{
	ns2__deleteShoppingCartResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__deleteShoppingCartResponse_.soap_get(soap, "ns2:deleteShoppingCartResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WholeMapperSoapBindingProxy::send_InsertClient(const char *soap_endpoint_url, const char *soap_action, ns2__InsertClient *ns2__InsertClient_)
{
	struct __ns1__InsertClient soap_tmp___ns1__InsertClient;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8090/WholeMapper";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__InsertClient.ns2__InsertClient_ = ns2__InsertClient_;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__InsertClient(soap, &soap_tmp___ns1__InsertClient);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InsertClient(soap, &soap_tmp___ns1__InsertClient, "-ns1:InsertClient", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InsertClient(soap, &soap_tmp___ns1__InsertClient, "-ns1:InsertClient", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WholeMapperSoapBindingProxy::recv_InsertClient(ns2__InsertClientResponse &ns2__InsertClientResponse_)
{
	ns2__InsertClientResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__InsertClientResponse_.soap_get(soap, "ns2:InsertClientResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
